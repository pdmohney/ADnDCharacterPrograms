using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Henchmen
{
    class Program
    {
        private static string HmenClassOut;
        private static string HmenClassIn;
        private static string HmenStrOut;
        private static string HmenIntOut;
        private static string HmenWisOut;
        private static string HmenDexOut;
        private static string HmenConOut;
        private static string HmenChaOut;
        private static string HmenComOut;
        private static string HmenRaceOut;
        private static string AlignOut;
        private static string GenderOut;
        private static string ExpLevelOut;
        private static string HitDie01;
        private static string HitDie02;
        private static string HitDie03;
        private static string HitDie04;
        private static string HitDie05;
        private static string HitDie06;
        private static string HitDie07;
        private static string HitDie08;
        private static string HitDie09;
        private static string HitDie10;
        private static string HitDie11;
        private static string HitDie12;
        private static string BardFighterLvlOut;
        private static string BardThiefLvlOut;
        private static string HmenHeightOut;
        private static string BuildOut;
        private static string PsionicPotentialOut;
        private static string MagicItem01Out;
        private static string MagicItem02Out;
        private static string MagicItem03Out;
        private static string SpecialistOut;
        private static string HairOut;
        private static string HairLengthOut;
        private static string RandomSkillOut;
        private static int NbrOfNWP;
        private static int NbrOfWP;
        private static int BardWP01;
        private static int BardWP02;
        private static string OutlookOut;
        private static string PersonalityOut;
        private static string DispositionOut;
        private static string MotivesOut01;
        private static string MotivesOut02;
        private static string MotivesOut03;
        private static string InterestsOut;
        private static string NatureOut;
        private static string ConOut;
        private static string N01;
        private static string N02;
        private static string N03;
        private static string N04;
        private static string N05;
        private static string N06;
        private static string N07;
        private static string N08;
        private static string VowOut;
        private static int NbrOfAddLangs;
        private static int NOAL;
        private static string RacialLangs;
        private static string Lang01;
        private static string Lang02;
        private static string Lang03;
        private static string Lang04;
        private static string Lang05;
        private static string Lang06;
        private static string Lang07;
        private static int HmenAge;
        private static int AddLevelToAge;
        private static int Die10x10;
        private static int Die6x5;
        private static string MinLevel;
        private static string MaxLevel;
        private static int GoldTotal;
        private static string BirthMonthOut;
        private static int DayOfMonth;
        private static string HmenAlignIn;
        private static string HmenLimitIn;
        private static string ConvertedAlign;
        private static string Racial01;
        private static string Racial02;
        private static string Racial03;
        private static string Racial04;
        private static string Racial05;
        private static string Racial06;
        private static string Racial07;
        private static string Racial08;
        private static string MaritalStatusOut;
        private static string CityOfOriginOut;
        private static string SocialClassOut;
        private static string FatherOut;
        private static string MotherOut;
        private static string FamilyOut;
        private static string FamilyStatusOut;
        private static string AlliesOut;
        private static string CompanionsOut;
        private static string MeritOut;
        private static string FlawOut;
        private static string Speaking1Out;
        private static string Speaking2Out;
        private static string Speaking3Out;
        private static string Speaking4Out;
        private static string ClothingOut;
        private static string ResidenceOut;
        private static string DeityOut;
        private static string WeapProfOut;
        private static string MagicItemOut;
        private static int Magic01Cnt;
        private static int Magic02Cnt;
        private static int Magic03Cnt;
        private static int attempts;

        static void Main()
        {
            Console.WriteLine("How many non-player characters?");
            //int attempts = Convert.ToInt32(Console.ReadLine());

            string line = Console.ReadLine();
            try
            {
                attempts = Int32.Parse(line);
            }
            catch (FormatException)
            {
                Console.WriteLine("Must enter an integer, defaulting to 1");
                attempts = 1;
            }

            HmenLimitIn = "";
            HmenClassIn = "";
            HmenAlignIn = "";

            Console.WriteLine("You may choose to limit the output to one class, or you may choose to limit the");
            Console.WriteLine("output to one alignment, or you can leave both parameters open. If you wish to ");
            Console.WriteLine("limit to one class, type C; if you wish to limit to one alignment, type A, or");
            Console.WriteLine("just press enter to continue.");
            HmenLimitIn = Console.ReadLine();
            if (HmenLimitIn == "C")
            {
                Console.WriteLine("If you want to limit your results to one class, type is exactly as one of the below:");
                Console.WriteLine("Fighter, Ranger, Barbarian, Cavalier, Paladin, Magic-User, Illusionist");
                Console.WriteLine("Cleric, Druid, Thief, Assassin, Monk, Bard");
                HmenClassIn = Console.ReadLine();
            }
            else
            if (HmenLimitIn == "A")
            {
                Console.WriteLine("If you want to limit your results to one alignment, type is exactly as one of the below:");
                Console.WriteLine("LG, LN, LE, NG, N, NE, CG, CN, CE");
                HmenAlignIn = Console.ReadLine();
            }

            Console.WriteLine("If you would like a minimum level, enter that, in the ");
            Console.WriteLine("format from '01', '02', '03', '04, etc. to '11'.");
            Console.WriteLine(" (note, this program only creates up to level 12.)");
            MinLevel = Console.ReadLine();
            if (MinLevel == "")
                MinLevel = "01";

            Console.WriteLine("If you would like a maximum level, enter that, in the ");
            Console.WriteLine("format from '01', '02', '03', '04, etc. to '11'.");
            Console.WriteLine(" (note, this program only creates up to level 12.)");
            MaxLevel = Console.ReadLine();
            if (MaxLevel == "")
                MaxLevel = "12";

            string outputfile = "npcs";
            Console.WriteLine("Enter file name, which will be written onto your 'C' drive, users/public folder.");
            Console.WriteLine("Press enter to default to file name 'npcs'.");
            outputfile = (Console.ReadLine());
            if (outputfile == "")
                outputfile = "npcs";

            Random rnd = new Random();

            string file_name = ("C:\\Users\\public\\" + outputfile + ".txt");

            System.IO.StreamWriter objwriter;
            objwriter = new System.IO.StreamWriter(file_name);

            for (int i = 1; i <= attempts; i++)
            {
                RandomName();
                Console.WriteLine("Name: " + N01 + N02 + N03 + N04 + N05 + N06 + N07 + N08);
                objwriter.WriteLine("Name: " + N01 + N02 + N03 + N04 + N05 + N06 + N07 + N08);

                HitDie01 = " ";
                HitDie02 = " ";
                HitDie03 = " ";
                HitDie04 = " ";
                HitDie05 = " ";
                HitDie06 = " ";
                HitDie07 = " ";
                HitDie08 = " ";
                HitDie09 = " ";
                HitDie10 = " ";
                HitDie11 = " ";
                HitDie12 = " ";
                BardFighterLvlOut = " ";
                BardThiefLvlOut = " ";
                Racial01 = "";
                Racial02 = "";
                Racial03 = "";
                Racial04 = "";
                Racial05 = "";
                Racial06 = "";
                Racial07 = "";
                Racial08 = "";

                //arf
                if (HmenLimitIn == "A")
                    HmenAlignLimit();

                //if (HmenLimitIn == "C")
                //    HmenClassLimit();

                if (HmenClassIn == "")
                    HenchClass();
                else
                    HmenClassOut = HmenClassIn;

                if (HmenClassOut == "Fighter")
                {
                    FighterStats();
                    AnyRace();
                    AnyAlign();
                    Gender();
                    ExpLevel();
                    HDFighter();
                    NbrOfNWP = 2;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03")
                        NbrOfWP = 1;
                    else
                    if (ExpLevelOut == "04" || ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;
                }
                else
                if (HmenClassOut == "Ranger")
                {
                    RangerStats();
                    RangerRace();
                    RangerAlign();
                    Gender();
                    ExpLevel();
                    HDRanger();
                    NbrOfNWP = 2;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03")
                        NbrOfWP = 0;
                    else
                    if (ExpLevelOut == "04" || ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 1;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09")
                        NbrOfWP = 2;
                    else
                        NbrOfWP = 3;
                }
                else
                if (HmenClassOut == "Barbarian")
                {
                    BarbarianStats();
                    HumanRace();
                    BarbarianAlign();
                    Gender();
                    ExpLevel();
                    HDBarbarian();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02")
                        NbrOfWP = 6;
                    else
                    if (ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 7;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 8;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 9;
                    else
                    if (ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 10;
                    else
                        NbrOfWP = 11;
                }
                else
                if (HmenClassOut == "Cavalier")
                {
                    CavalierStats(); ;
                    CavalierRace();
                    AnyAlign();
                    Gender();
                    ExpLevel();
                    HDCavalier();
                    NbrOfNWP = 2;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02")
                        NbrOfWP = 3;
                    else
                    if (ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 4;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 5;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 6;
                    else
                    if (ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 7;
                    else
                        NbrOfWP = 8;
                }
                else
                if (HmenClassOut == "Paladin")
                {
                    PaladinStats();
                    PaladinRace();
                    PaladinAlign();
                    Gender();
                    ExpLevel();
                    HDPaladin();
                    NbrOfNWP = 2;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02")
                        NbrOfWP = 6;
                    else
                    if (ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 7;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 8;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 9;
                    else
                    if (ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 10;
                    else
                        NbrOfWP = 11;
                }
                else
                if (HmenClassOut == "Cleric")
                {
                    ClericStats();
                    ClericRace();
                    AnyAlign();
                    Gender();
                    ExpLevel();
                    HDCleric();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06" || ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;
                }
                else
                if (HmenClassOut == "Druid")
                {
                    DruidStats();
                    DruidRace();
                    NeutralAlign();
                    Gender();
                    ExpLevel();
                    HDDruid();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04" || ExpLevelOut == "05")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "06" || ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;
                }
                else
                if (HmenClassOut == "Thief")
                {
                    ThiefStats();
                    AnyRace();
                    ThiefAlign();
                    Gender();
                    ExpLevel();
                    HDThief();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06" || ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;
                }
                else
                if (HmenClassOut == "Assassin")
                {
                    AssassinStats();
                    AssassinRace();
                    AssassinAlign();
                    Gender();
                    ExpLevel();
                    HDAssassin();
                    NbrOfNWP = 2;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06" || ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;
                }
                else
                if (HmenClassOut == "Monk")
                {
                    MonkStats();
                    HumanRace();
                    MonkAlign();
                    Gender();
                    ExpLevel();
                    HDMonk();
                    NbrOfNWP = 1;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02")
                        NbrOfWP = 1;
                    else
                    if (ExpLevelOut == "03" || ExpLevelOut == "04")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 3;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08")
                        NbrOfWP = 4;
                    else
                    if (ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 5;
                    else
                        NbrOfWP = 6;
                }
                else
                if (HmenClassOut == "Bard")
                {
                    BardStats();
                    HumanRace();
                    BardAlign();
                    Gender();
                    BardFighterLvl();
                    NbrOfNWP = 2;
                    if (BardFighterLvlOut == "05")
                    {
                        NbrOfNWP = 4;
                        BardThiefLvl();
                        BardWP01 = 5;
                    }
                    else
                    if (BardFighterLvlOut == "06")
                    {
                        BardThiefLvl();
                        NbrOfNWP = 4;
                        BardWP01 = 5;
                    }
                    else
                    if (BardFighterLvlOut == "07")
                    {
                        BardThiefLvl();
                        NbrOfNWP = 4;
                        BardWP01 = 6;
                    }

                    if (BardThiefLvlOut == "05")
                    {
                        ExpLevel();
                        NbrOfNWP = 7;
                        BardWP02 = 3;
                    }
                    else
                    if (BardThiefLvlOut == "06")
                    {
                        ExpLevel();
                        NbrOfNWP = 7;
                        BardWP02 = 3;
                    }
                    else
                    if (BardThiefLvlOut == "07")
                    {
                        ExpLevel();
                        NbrOfNWP = 7;
                        BardWP02 = 3;
                    }
                    else
                    if (BardThiefLvlOut == "08")
                    {
                        ExpLevel();
                        NbrOfNWP = 7;
                        BardWP02 = 3;
                    }
                    else
                    if (BardThiefLvlOut == "09")
                    {
                        ExpLevel();
                        NbrOfNWP = 7;
                        BardWP02 = 3;
                    }

                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04" || ExpLevelOut == "05")
                        NbrOfWP = 2;
                    else
                    if (ExpLevelOut == "06" || ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09" || ExpLevelOut == "10")
                        NbrOfWP = 3;
                    else
                        NbrOfWP = 4;

                }
                else
                if (HmenClassOut == "Magic-User")
                {
                    MagicUserStats();
                    MagicUserRace();
                    AnyAlign();
                    Gender();
                    ExpLevel();
                    HDMagicUser();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04" || ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 1;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09" || ExpLevelOut == "10" || ExpLevelOut == "05" || ExpLevelOut == "11")
                        NbrOfWP = 2;
                    else
                        NbrOfWP = 3;
                }
                else
                if (HmenClassOut == "Illusionist")
                {
                    IllusionistStats();
                    IllusionistRace();
                    AnyAlign();
                    Gender();
                    ExpLevel();
                    HDIllusionist();
                    NbrOfNWP = 3;
                    if (ExpLevelOut == "01" || ExpLevelOut == "02" || ExpLevelOut == "03" || ExpLevelOut == "04" || ExpLevelOut == "05" || ExpLevelOut == "06")
                        NbrOfWP = 1;
                    else
                    if (ExpLevelOut == "07" || ExpLevelOut == "08" || ExpLevelOut == "09" || ExpLevelOut == "10" || ExpLevelOut == "05" || ExpLevelOut == "11")
                        NbrOfWP = 2;
                    else
                        NbrOfWP = 3;
                }

                NbrOfAddLangs = 0;

                if (HmenRaceOut == "Mountain Dwarf" || HmenRaceOut == "Hill Dwarf" || HmenRaceOut == "Grey Dwarf")
                {
                    DwarfHeight();
                    DwarfLangs();
                    DwarfAge();
                    RacialsDwarf();
                }
                else
                if (HmenRaceOut == "Deep Gnome" || HmenRaceOut == "Surface Gnome")
                {
                    GnomeHeight();
                    GnomeLangs();
                    GnomeAge();
                    RacialsGnome();
                }
                else
                if (HmenRaceOut == "Halfling")
                {
                    HalflingHeight();
                    HalflingLangs();
                    HalflingAge();
                    RacialsHalfling();
                }
                else
                if (HmenRaceOut == "Half-Orc")
                {
                    HalfOrcHeight();
                    HalfOrcLangs();
                    HalfOrcAge();
                    RacialsHalforc();
                }
                else
                if (HmenRaceOut == "Half-Elf")
                {
                    HumanHeight();
                    HalfElfLangs();
                    HalfElfAge();
                    RacialsHalfElf();
                }
                else
                if (HmenRaceOut == "Dark Elf")
                {
                    ElfLangs();
                    HumanHeight();
                    ElfAge();
                    RacialsDrow();
                }
                else
                if (HmenRaceOut == "Gray Elf" || HmenRaceOut == "High Elf"
                || HmenRaceOut == "Valley Elf" || HmenRaceOut == "Wild Elf" || HmenRaceOut == "Wood Elf")
                {
                    ElfLangs();
                    HumanHeight();
                    ElfAge();
                    RacialsElf();
                }
                else
                if (HmenRaceOut == "Human")
                {
                    HumanLangs();
                    HumanHeight();
                    HumanAge();
                }

                HmenBuild();
                HairColor();
                HairLength();
                PsionicPotential();
                MagicItems();

                SpecialistOut = " ";

                if (HmenClassOut == "Fighter")
                    Specialist();
                else
                if (HmenClassOut == "Ranger")
                    Specialist();

                RandomSkills();

                Console.WriteLine("  Class: " + HmenClassOut);

                Console.WriteLine("  STR " + HmenStrOut + " INT " + HmenIntOut + " WIS " + HmenWisOut + " DEX " + HmenDexOut + " CON " + HmenConOut + " CHA " + HmenChaOut + " COM " + HmenComOut);
                //objwriter.WriteLine("  STR " + HmenStrOut + " INT " + HmenIntOut + " WIS " + HmenWisOut + " DEX " + HmenDexOut + " CON " + HmenConOut + " CHA " + HmenChaOut + " COM " + HmenComOut);

                objwriter.WriteLine("Class: " + HmenClassOut);
                objwriter.WriteLine("  STR " + HmenStrOut + " INT " + HmenIntOut + " WIS " + HmenWisOut + " DEX " + HmenDexOut + " CON " + HmenConOut + " CHA " + HmenChaOut + " COM " + HmenComOut);
                objwriter.WriteLine("  Race: " + HmenRaceOut);


                Console.WriteLine("  Race: " + HmenRaceOut);

                if (HmenAlignIn != "")
                    AlignOut = ConvertedAlign;

                if (AlignOut == "Lawful Good")
                    DeityLG();
                if (AlignOut == "Lawful Evil")
                    DeityLE();
                if (AlignOut == "Lawful Neutral")
                    DeityLN();
                if (AlignOut == "Chaotic Good")
                    DeityCG();
                if (AlignOut == "Chaotic Neutral")
                    DeityCN();
                if (AlignOut == "Chaotic Evil")
                    DeityCE();
                if (AlignOut == "Neutral Evil")
                    DeityNE();
                if (AlignOut == "Neutral Good")
                    DeityNG();
                if (AlignOut == "Neutral")
                    DeityN();

                Console.WriteLine("  Deity: " + DeityOut);
                objwriter.WriteLine("  Deity: " + DeityOut);


                Console.WriteLine("  Alignment: " + AlignOut);
                objwriter.WriteLine("  Alignment: " + AlignOut);
                Console.WriteLine("  Gender: " + GenderOut);
                objwriter.WriteLine("  Gender: " + GenderOut);


                Console.WriteLine("  Level: " + ExpLevelOut);
                objwriter.WriteLine("  Level: " + ExpLevelOut);
                Console.WriteLine("  Hit Points: " + HitDie01 + " " + HitDie02 + " " + HitDie03 + " " + HitDie04 + " " + HitDie05 + " " + HitDie06 + " " + HitDie07 + " " +
                               HitDie08 + " " + HitDie09 + " " + HitDie10 + " " + HitDie11 + " " + HitDie12);

                objwriter.WriteLine("  Hit Points: " + HitDie01 + " " + HitDie02 + " " + HitDie03 + " " + HitDie04 + " " + HitDie05 + " " + HitDie06 + " " + HitDie07 + " " +
                    HitDie08 + " " + HitDie09 + " " + HitDie10 + " " + HitDie11 + " " + HitDie12);

                if (HmenConOut == "15")
                    Console.WriteLine("  Add 1 point per die for CON bonus");
                else
                if (HmenConOut == "16")
                    Console.WriteLine("  Add 2 point per die for CON bonus");
                else
                if (HmenConOut == "17")
                    Console.WriteLine("  Add 2 point per die for CON bonus, or 3 points per die if Fighter/Cavalier type");
                else
                if (HmenConOut == "18")
                    Console.WriteLine("  Add 2 point per die for CON bonus, or 4 points per die if Fighter/Cavalier type");

                Console.WriteLine("  Additional Languages: " + NbrOfAddLangs);

                Lang01 = "";
                Lang02 = "";
                Lang03 = "";
                Lang04 = "";
                Lang05 = "";
                Lang06 = "";
                Lang07 = "";
                for (NOAL = 1; NOAL <= NbrOfAddLangs; NOAL++)
                    RandomLanguages();

                if (RacialLangs != " ")
                    Console.WriteLine("  Racial Languages " + RacialLangs);

                if (HmenClassOut == "Bard")
                {
                    Console.WriteLine("  Bard Fighter Level " + BardFighterLvlOut);
                    Console.WriteLine("  Bard Thief Level " + BardThiefLvlOut);
                }
                Console.WriteLine("  Height: " + HmenHeightOut + " inches");
                Console.WriteLine("  Build: " + BuildOut);
                Console.WriteLine("  Hair: " + HairOut);
                Console.WriteLine("  Hair Length: " + HairLengthOut);

                BirthMonthAndDay();
                Console.WriteLine("  Age: " + HmenAge);
                Console.WriteLine("  Birthday: " + BirthMonthOut + " " + DayOfMonth);

                MaritalStatus();
                Console.WriteLine("  Marital Status: " + MaritalStatusOut);
                objwriter.WriteLine("  Marital Status: " + MaritalStatusOut);

                CityOfOrigin();
                Console.WriteLine("  City of Origin: " + CityOfOriginOut);
                objwriter.WriteLine("  City of Origin: " + CityOfOriginOut);

                SocialClass();
                Console.WriteLine("  Social Class: " + SocialClassOut);
                objwriter.WriteLine("  Social Class: " + SocialClassOut);

                Father();
                Mother();
                Family();
                Console.WriteLine("  Family: " + FatherOut + ", " + MotherOut + ", " + FamilyOut);
                objwriter.WriteLine("  Family: " + FatherOut + ", " + MotherOut + ", " + FamilyOut);

                FamilyStatus();
                Console.WriteLine("  Family Status: " + FamilyStatusOut);
                objwriter.WriteLine("  Family Status: " + FamilyStatusOut);

                Allies();
                Console.WriteLine("  Allies: " + AlliesOut);
                objwriter.WriteLine("  Allies: " + AlliesOut);

                Companions();
                Console.WriteLine("  Companions: " + CompanionsOut);
                objwriter.WriteLine("  Companions: " + AlliesOut);

                int MeritDieRoll01 = rnd.Next(0, 4);
                Merit();
                if (MeritDieRoll01 > 0)
                {
                    Merit();
                    Console.WriteLine("  Merit: " + MeritOut);
                    objwriter.WriteLine("  Merit: " + MeritOut);
                }
                System.Threading.Thread.Sleep(300);

                if (MeritDieRoll01 > 1)
                {
                    Merit();
                    Console.WriteLine("  Merit: " + MeritOut);
                    objwriter.WriteLine("  Merit: " + MeritOut);
                }
                System.Threading.Thread.Sleep(300);

                if (MeritDieRoll01 > 2)
                {
                    Merit();
                    Console.WriteLine("  Merit: " + MeritOut);
                    objwriter.WriteLine("  Merit: " + MeritOut);
                }

                int FlawDieRoll01 = rnd.Next(0, 3);
                Flaw();
                if (FlawDieRoll01 > 0)
                {
                    Flaw();
                    Console.WriteLine("  Flaw: " + FlawOut);
                    objwriter.WriteLine("  Flaw: " + FlawOut);
                }
                System.Threading.Thread.Sleep(300);
                if (FlawDieRoll01 > 1)
                {
                    Flaw();
                    Console.WriteLine("  Flaw: " + FlawOut);
                    objwriter.WriteLine("  Flaw: " + FlawOut);
                }
                System.Threading.Thread.Sleep(300);

                Speaking1();
                System.Threading.Thread.Sleep(300);
                Speaking2();
                System.Threading.Thread.Sleep(300);
                Speaking3();
                System.Threading.Thread.Sleep(300);
                Speaking4();
                Console.WriteLine("  Speaking Style: " + Speaking1Out + Speaking2Out + Speaking3Out + Speaking4Out);
                objwriter.WriteLine("  Speaking Style: " + Speaking1Out + Speaking2Out + Speaking3Out + Speaking4Out);
                System.Threading.Thread.Sleep(300);

                Clothing();
                System.Threading.Thread.Sleep(300);
                Console.WriteLine("  Clothing style: " + ClothingOut);
                objwriter.WriteLine("  Clothing style: " + ClothingOut);

                Residence();
                System.Threading.Thread.Sleep(300);
                Console.WriteLine("  Residence: " + ResidenceOut);
                objwriter.WriteLine("  Residence: " + ResidenceOut);

                //arf01
                Console.WriteLine("  Psionic Potential: " + PsionicPotentialOut);
                Console.WriteLine("  Magic: items: " + MagicItem01Out);
                for (int j = 1; j <= Magic01Cnt; j++)
                {
                    MagicClassStr();
                    Console.WriteLine("                  " + MagicItemOut);
                }
                Console.WriteLine("                " + MagicItem02Out);
                for (int j = 1; j <= Magic02Cnt; j++)
                {
                    MagicClassWeak();
                    Console.WriteLine("                  " + MagicItemOut);
                }
                Console.WriteLine("                " + MagicItem03Out);
                for (int j = 1; j <= Magic03Cnt; j++)
                {
                    MagicClassWeak();
                    Console.WriteLine("                  " + MagicItemOut);
                }

                Gold();

                Console.WriteLine("  Gold: " + GoldTotal);

                Console.WriteLine("  Weapon Proficiencies: ");
                objwriter.WriteLine("  Weapon Proficiencies: ");

                if (HmenClassOut == "Fighter")
                {
                    Console.WriteLine("   " + SpecialistOut);
                    objwriter.WriteLine("   " + SpecialistOut);
                    for (int wp = 1; wp <= NbrOfWP ; wp++)
                    {
                        AnyWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                Console.WriteLine("  Weapon Specialization: " + SpecialistOut);
                objwriter.WriteLine("  Weapon Specialization: " + SpecialistOut);
                }
                else
                if (HmenClassOut == "Ranger")
                {
                    Console.WriteLine("   " + SpecialistOut);
                    objwriter.WriteLine("   " + SpecialistOut);
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        AnyWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                    Console.WriteLine("  Weapon Specialization: " + SpecialistOut);
                    objwriter.WriteLine("  Weapon Specialization: " + SpecialistOut);
                }

                if (HmenClassOut == "Cavalier" || HmenClassOut == "Paladin")
                    {
                        {
                            Console.WriteLine("   Lance");
                            objwriter.WriteLine("   Lance");
                            CavalierSword();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                            CavalierHorse();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                        if (ExpLevelOut == "03" || ExpLevelOut == "04")
                        {
                            CavalierWeapon();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                        if (ExpLevelOut == "05" || ExpLevelOut == "06")
                        {
                            CavalierWeapon();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                        if (ExpLevelOut == "07" || ExpLevelOut == "08")
                        {
                            CavalierWeapon();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                        if (ExpLevelOut == "09" || ExpLevelOut == "10")
                        {
                            CavalierWeapon();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                        if (ExpLevelOut == "11" || ExpLevelOut == "12")
                        {
                            CavalierWeapon();
                            Console.WriteLine("   " + WeapProfOut);
                            objwriter.WriteLine("   " + WeapProfOut);
                        };
                    }

                if (HmenClassOut == "Cleric")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        ClericWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Druid")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        DruidWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Barbarian")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        AnyWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Magic-User" || HmenClassOut == "Illusionist")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        MagicUserWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Thief")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        ThiefWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Assassin")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        AnyWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }


                if (HmenClassOut == "Monk")
                {
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        MonkWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }

                if (HmenClassOut == "Bard")
                {
                    Console.WriteLine("  Fighter Weapon Proficiencies");
                    objwriter.WriteLine("  Fighter Weapon Proficiencies");

                    for (int wp = 1; wp <= BardWP01; wp++)
                    {
                        AnyWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                    Console.WriteLine("  Thief Weapon Proficiencies");
                    objwriter.WriteLine("  Thief Weapon Proficiencies");
                    for (int wp = 1; wp <= BardWP02; wp++)
                    {
                        ThiefWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                    Console.WriteLine("  Bard Weapon Proficiencies");
                    objwriter.WriteLine("  Bard Weapon Proficiencies");
                    for (int wp = 1; wp <= NbrOfWP; wp++)
                    {
                        BardWeapon();
                        Console.WriteLine("   " + WeapProfOut);
                        objwriter.WriteLine("   " + WeapProfOut);
                    }
                }


                Console.WriteLine("  Birth Skill: " + RandomSkillOut);



                //note non-weapon proficiencies are generated at the end of the objwriter section



                objwriter.WriteLine("  Languages: " + NbrOfAddLangs);
                if (RacialLangs != " ")
                    objwriter.WriteLine("  Racial Languages " + RacialLangs);
                if (Lang01 != "")
                    objwriter.WriteLine("    " + Lang01);
                if (Lang02 != "")
                    objwriter.WriteLine("    " + Lang02);
                if (Lang03 != "")
                    objwriter.WriteLine("    " + Lang03);
                if (Lang04 != "")
                    objwriter.WriteLine("    " + Lang04);
                if (Lang05 != "")
                    objwriter.WriteLine("    " + Lang05);
                if (Lang06 != "")
                    objwriter.WriteLine("    " + Lang06);
                if (Lang07 != "")
                    objwriter.WriteLine("    " + Lang07);

                //objwriter.WriteLine("  Alignment: " + AlignOut);
                //objwriter.WriteLine("  Gender: " + GenderOut);
                //objwriter.WriteLine("  Level: " + ExpLevelOut);
                //objwriter.WriteLine("  Hit Points: " + HitDie01 + " " + HitDie02 + " " + HitDie03 + " " + HitDie04 + " " + HitDie05 + " " + HitDie06 + " " + HitDie07 + " " + HitDie08 + " " +
                //               HitDie09 + " " + HitDie10 + " " + HitDie11 + " " + HitDie12);
                if (HmenClassOut == "Bard")
                {
                    objwriter.WriteLine("  Bard Fighter Level " + BardFighterLvlOut);
                    objwriter.WriteLine("  Bard Thief Level " + BardThiefLvlOut);
                }
                if (HmenConOut == "15")
                    objwriter.WriteLine("  Add 1 point per die for CON bonus");
                else
                if (HmenConOut == "16")
                    objwriter.WriteLine("  Add 2 point per die for CON bonus");
                else
                if (HmenConOut == "17")
                    objwriter.WriteLine("  Add 2 point per die for CON bonus, or 3 points per die if Fighter/Cavalier type");
                else
                if (HmenConOut == "18")
                    objwriter.WriteLine("  Add 2 point per die for CON bonus, or 4 points per die if Fighter/Cavalier type");
                objwriter.WriteLine("  Height: " + HmenHeightOut + " inches");
                objwriter.WriteLine("  Build: " + BuildOut);
                objwriter.WriteLine("  Hair: " + HairOut);
                objwriter.WriteLine("  Hair Length: " + HairLengthOut);
                objwriter.WriteLine("  Age: " + HmenAge);
                objwriter.WriteLine("  Birthday: " + BirthMonthOut + " " + DayOfMonth);
                objwriter.WriteLine("  Psionic Potential: " + PsionicPotentialOut);
                objwriter.WriteLine("  Magic: items: " + MagicItem01Out);
                objwriter.WriteLine("                " + MagicItem02Out);
                objwriter.WriteLine("                " + MagicItem03Out);

                objwriter.WriteLine("  Gold: " + GoldTotal);


                objwriter.WriteLine("  Birth Skill: " + RandomSkillOut);

                for (int nwp01 = 1; nwp01 <= NbrOfNWP; nwp01++)
                {
                    int DieRoll01 = rnd.Next(1, 101);

                    NonWeaponProfs();

                    Console.WriteLine("  Non-Weapon Proficiency: " + RandomSkillOut);
                    objwriter.WriteLine("  Non-Weapon Proficiency: " + RandomSkillOut);

                    System.Threading.Thread.Sleep(300);
                }

                Outlook();

                Console.WriteLine("  General Tendencies: " + OutlookOut);
                objwriter.WriteLine("  General Tendencies: " + OutlookOut);

                Personality();
                Console.WriteLine("  Personality: " + PersonalityOut);
                objwriter.WriteLine("  Personality: " + PersonalityOut);

                Disposition();
                Console.WriteLine("  Disposition: " + DispositionOut);
                objwriter.WriteLine("  Disposition: " + DispositionOut);

                int DieRollMotive = rnd.Next(01, 99);
                if (DieRollMotive < 8)
                {
                    Motives1();
                    Motives1a();
                    Motives1b();
                }
                else
                if (DieRollMotive < 15)
                {
                    Motives2();
                    Motives1a();
                }
                else
                if (DieRollMotive < 22)
                    Motives3();
                else
                if (DieRollMotive < 34)
                    Motives4();

                if (DieRollMotive < 34)
                {
                    Console.WriteLine("  Motives: " + MotivesOut01 + MotivesOut02 + MotivesOut03);
                    objwriter.WriteLine("  Motives: " + MotivesOut01 + MotivesOut02 + MotivesOut03);
                }

                Interests();
                Console.WriteLine("  Interests: " + InterestsOut);
                objwriter.WriteLine("  Interests: " + InterestsOut);

                Nature();
                Console.WriteLine("  Nature: " + NatureOut);
                objwriter.WriteLine("  Nature: " + NatureOut);

                if (Racial01 != "")
                {
                    Console.WriteLine("  Racials: " + Racial01);
                    objwriter.WriteLine("   Racials: " + Racial01);
                }
                if (Racial02 != "")
                {
                    Console.WriteLine("   " + Racial02);
                    objwriter.WriteLine("   " + Racial02);
                }
                if (Racial03 != "")
                {
                    Console.WriteLine("   " + Racial03);
                    objwriter.WriteLine("   " + Racial03);
                }
                if (Racial04 != "")
                {
                    Console.WriteLine("   " + Racial04);
                    objwriter.WriteLine("   " + Racial04);
                }
                if (Racial05 != "")
                {
                    Console.WriteLine("   " + Racial05);
                    objwriter.WriteLine("   " + Racial05);
                }
                if (Racial06 != "")
                {
                    Console.WriteLine("   " + Racial06);
                    objwriter.WriteLine("   " + Racial06);
                }
                if (Racial07 != "")
                {
                    Console.WriteLine("   " + Racial07);
                    objwriter.WriteLine("   " + Racial07);
                }
                if (Racial08 != "")
                {
                    Console.WriteLine("   " + Racial08);
                    objwriter.WriteLine("   " + Racial08);
                }


                Console.WriteLine(" ");
                objwriter.WriteLine(" ");

                System.Threading.Thread.Sleep(400);
            }
            objwriter.Close();
            Console.WriteLine("Request complete");
            Console.ReadLine();
        }

        public static void HenchClass()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                "Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                "Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                "Assassin",         "Monk",                "Bard"
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void FighterStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(9, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(7, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void RangerStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(13, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(13, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(14, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(14, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void BarbarianStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(15, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 18);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(14, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(15, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void PaladinStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(12, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(9, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(13, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(9, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(13, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(13, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void CavalierStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(15, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(10, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(10, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(15, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(15, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void ClericStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(6, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(9, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void DruidStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(6, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(9, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(12, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(15, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void MagicUserStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(6, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(15, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(6, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void IllusionistStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(6, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(9, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(15, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void MonkStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(15, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(15, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(15, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void BardStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(15, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(15, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(15, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(15, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(9, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void ThiefStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(6, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(6, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(9, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        public static void AssassinStats()
        {
            Random rnd = new Random();

            int StatStr = rnd.Next(12, 19);
            HmenStrOut = StatStr.ToString();
            int StatInt = rnd.Next(11, 19);
            HmenIntOut = StatInt.ToString();
            int StatWis = rnd.Next(6, 19);
            HmenWisOut = StatWis.ToString();
            int StatDex = rnd.Next(12, 19);
            HmenDexOut = StatDex.ToString();
            int StatCon = rnd.Next(6, 19);
            HmenConOut = StatCon.ToString();
            int StatCha = rnd.Next(6, 19);
            HmenChaOut = StatCha.ToString();
            int StatCom = rnd.Next(6, 19);
            HmenComOut = StatCom.ToString();
        }
        // fighter, thief
        public static void AnyRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Grey Dwarf","Grey Dwarf",
                                                            "Hill Dwarf","Hill Dwarf",
                                                            "Mountain Dwarf","Mountain Dwarf",
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "High Elf", "High Elf",
                                                            "Valley Elf",
                                                            "Wild Elf",
                                                            "Wood Elf","Wood Elf",
                                                            "Deep Gnome",
                                                            "Surface Gnome","Surface Gnome",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                                            "Halfling","Halfling",
                                                            "Half-Orc",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void CavalierRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "High Elf", "High Elf",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void PaladinRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void ClericRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Grey Dwarf","Grey Dwarf",
                                                            "Hill Dwarf","Hill Dwarf",
                                                            "Mountain Dwarf","Mountain Dwarf",
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "Valley Elf",
                                                            "High Elf", "High Elf",
                                                            "Wood Elf","Wood Elf",
                                                            "Deep Gnome",
                                                            "Surface Gnome","Surface Gnome",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                                            "Halfling","Halfling",
                                                            "Half-Orc",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void DruidRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Gray Elf","Gray Elf",
                                                            "Valley Elf",
                                                            "Wild Elf",
                                                            "High Elf", "High Elf",
                                                            "Wood Elf","Wood Elf",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                                            "Halfling","Halfling",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void HumanRace()

        //Barbarian, Monk
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void RangerRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "High Elf", "High Elf",
                                                            "Valley Elf",
                                                            "Wood Elf","Wood Elf",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void MagicUserRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "High Elf", "High Elf",
                                                            "Valley Elf",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                                            "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void IllusionistRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Deep Gnome",
                                                            "Surface Gnome","Surface Gnome",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void AssassinRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Grey Dwarf","Grey Dwarf",
                                                            "Hill Dwarf","Hill Dwarf",
                                                            "Mountain Dwarf","Mountain Dwarf",
                                                            "Dark Elf",
                                                            "Gray Elf","Gray Elf",
                                                            "High Elf", "High Elf",
                                                            "Valley Elf",
                                                            "Wild Elf",
                                                            "Wood Elf","Wood Elf",
                                                            "Deep Gnome",
                                                            "Surface Gnome","Surface Gnome",
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                                            "Half-Orc",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void BardRace()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Half-Elf","Half-Elf","Half-Elf",
                                             "Human","Human","Human","Human","Human","Human","Human","Human","Human","Human"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenRaceOut = subtype01;
        }
        public static void AnyAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Good","Lawful Good",
                                                            "Lawful Evil",
                                                            "Lawful Neutral","Lawful Neutral",
                                                            "Chaotic Good","Chaotic Good",
                                                            "Chaotic Neutral",
                                                            "Chaotic Evil",
                                                            "Neutral Good", "Neutral Good",
                                                            "Neutral",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void NeutralAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Neutral"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void BarbarianAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Chaotic Good","Chaotic Good",
                                                            "Chaotic Neutral",
                                                            "Chaotic Evil",
                                                            "Neutral Good","Neutral Good",
                                                            "Neutral",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void RangerAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Good",
                                                            "Chaotic Good",
                                                            "Neutral Good",
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void ThiefAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Evil",
                                                            "Lawful Neutral","Lawful Neutral",
                                                            "Chaotic Neutral",
                                                            "Chaotic Evil",
                                                            "Neutral","Neutral",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void AssassinAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Evil",
                                                            "Chaotic Evil",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void MonkAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Good",
                                                            "Lawful Evil",
                                                            "Lawful Neutral","Lawful Neutral",
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void BardAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Neutral","Lawful Neutral",
                                                            "Chaotic Neutral",
                                                            "Neutral Good","Neutral Good",
                                                            "Neutral","Neutral",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void PaladinAlign()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Lawful Good","Lawful Good",
                                                            "Lawful Evil",
                                                            "Lawful Neutral","Lawful Neutral",
                                                            "Chaotic Good","Chaotic Good",
                                                            "Chaotic Neutral",
                                                            "Chaotic Evil",
                                                            "Neutral Good","Neutral Good",
                                                            "Neutral Evil"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlignOut = subtype01;
        }
        public static void Gender()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "Male","Male","Male","Male","Male","Male","Male","Male","Male","Male",
                                             "Female","Female","Female","Female","Female","Female","Female","Female","Female","Female",
                                                            "Other"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            GenderOut = subtype01;
        }
        public static void ExpLevel()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                                                            "01","02","02","03","03","03","04","04","04","04",
                                                            "05","05","05","05","05",
                                                            "06","06","06","06","06","06",
                                                            "07","07","07","07","07",
                                                            "08", "08", "08",  "08",
                                                            "09","09","09","09",
                                                            "10","10",
                                                            "11","12"
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ExpLevelOut = subtype01;

            int MinLevelNumber = Convert.ToInt32(MinLevel);
            int ExpLevelNumber = Convert.ToInt32(ExpLevelOut);

            if (MinLevelNumber > ExpLevelNumber)
                ExpLevelOut = MinLevel;

            int MaxLevelNumber = Convert.ToInt32(MaxLevel);
            ExpLevelNumber = Convert.ToInt32(ExpLevelOut);

            if (MaxLevelNumber < ExpLevelNumber)
                ExpLevelOut = MaxLevel;

        }
        public static void HDPaladin()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDCavalier()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 11);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 11);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 11);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDCleric()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();

            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDDruid()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 9);
                HitDie11 = DieRoll11.ToString();
                int DieRoll12 = rnd.Next(1, 9);
                HitDie12 = DieRoll12.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 9);
                HitDie11 = DieRoll11.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDFighter()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 11);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 11);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 11);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 11);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 11);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 11);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 11);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 11);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(6, 11);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDRanger()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 9);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 9);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 9);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 9);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 9);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 9);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 9);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 9);
                HitDie03 = DieRoll03.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(5, 9);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 9);
                HitDie02 = DieRoll02.ToString();
            }
        }
        public static void HDBarbarian()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 13);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 13);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 13);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 13);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 13);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 13);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 13);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 13);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 13);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 13);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 13);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(7, 13);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDMagicUser()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 5);
                HitDie11 = DieRoll11.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 5);
                HitDie11 = DieRoll11.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDIllusionist()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDThief()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDAssassin()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 7);
                HitDie11 = DieRoll11.ToString();
                int DieRoll12 = rnd.Next(1, 7);
                HitDie12 = DieRoll12.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 7);
                HitDie11 = DieRoll11.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 7);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 7);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 7);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 7);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 7);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 7);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 7);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 7);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 7);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(4, 7);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void HDMonk()
        {
            Random rnd = new Random();

            if (ExpLevelOut == "12")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 5);
                HitDie11 = DieRoll11.ToString();
                int DieRoll12 = rnd.Next(1, 5);
                HitDie12 = DieRoll12.ToString();
            }
            else
            if (ExpLevelOut == "11")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
                int DieRoll11 = rnd.Next(1, 5);
                HitDie11 = DieRoll11.ToString();
            }
            else
            if (ExpLevelOut == "10")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
                int DieRoll10 = rnd.Next(1, 5);
                HitDie10 = DieRoll10.ToString();
            }
            else
            if (ExpLevelOut == "09")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
                int DieRoll09 = rnd.Next(1, 5);
                HitDie09 = DieRoll09.ToString();
            }
            else
            if (ExpLevelOut == "08")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
                int DieRoll08 = rnd.Next(1, 5);
                HitDie08 = DieRoll08.ToString();
            }
            else
            if (ExpLevelOut == "07")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
                int DieRoll07 = rnd.Next(1, 5);
                HitDie07 = DieRoll07.ToString();
            }
            else
            if (ExpLevelOut == "06")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
                int DieRoll06 = rnd.Next(1, 5);
                HitDie06 = DieRoll06.ToString();
            }
            else
            if (ExpLevelOut == "05")
            {
                int DieRoll01 = rnd.Next(1, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
                int DieRoll05 = rnd.Next(1, 5);
                HitDie05 = DieRoll05.ToString();
            }
            else
            if (ExpLevelOut == "04")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
                int DieRoll04 = rnd.Next(1, 5);
                HitDie04 = DieRoll04.ToString();
            }
            else
            if (ExpLevelOut == "03")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
                int DieRoll03 = rnd.Next(1, 5);
                HitDie03 = DieRoll03.ToString();
            }
            else
            if (ExpLevelOut == "02")
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
                int DieRoll02 = rnd.Next(1, 5);
                HitDie02 = DieRoll02.ToString();
            }
            else
            {
                int DieRoll01 = rnd.Next(3, 5);
                HitDie01 = DieRoll01.ToString();
            }
        }
        public static void BardFighterLvl()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                    "01",
                    "02","02",
                    "03","03","03",
                    "04","04","04","04",
                    "05","05","05","05","05","05",
                    "06","06","06","06","06","06","06","06",
                    "07","07","07","07","07","07","07","07","07","07",
                    };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            BardFighterLvlOut = subtype01;
        }
        public static void BardThiefLvl()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                    "05","05","05","05","05","05",
                    "06","06","06","06","06","06","06","06",
                    "07","07","07","07","07","07","07","07","07","07",
                    "08","08","08","08","08","08","08","08","08","08",
                    "09","09","09","09","09","09","09","09",
                    };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            BardThiefLvlOut = subtype01;
        }
        public static void DwarfHeight()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(45, 55);
            HmenHeightOut = DieRoll01.ToString();
        }
        public static void GnomeHeight()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(41, 47);
            HmenHeightOut = DieRoll01.ToString();
        }
        public static void HalflingHeight()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(34, 45);
            HmenHeightOut = DieRoll01.ToString();
        }
        public static void HalfOrcHeight()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(63, 72);
            HmenHeightOut = DieRoll01.ToString();
        }
        public static void HumanHeight()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(64, 77);
            HmenHeightOut = DieRoll01.ToString();
        }
        public static void HmenBuild()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                        "Skeletally Thin",
                        "Slender","Slender",
                        "Trim","Trim","Trim",
                        "Average","Average","Average","Average","Average","Average","Average","Average",
                        "Wiry Muscular","Wiry Muscular","Wiry Muscular",
                        "Athletic Muscular","Athletic Muscular","Athletic Muscular","Athletic Muscular",
                        "Bulky Muscular","Bulky Muscular","Bulky Muscular",
                        "Chubby"
                        };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            BuildOut = subtype01;
        }
        public static void HairColor()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                    "White",
                    "Light Blonde","Light Blonde",
                    "Light Brown","Light Brown","Light Brown",
                    "Medium Brown","Medium Brown","Medium Brown","Medium Brown",
                    "Reddish Brown","Reddish Brown",
                    "Dark Brown","Dark Brown",
                    "Fiery Red",
                    "Black"
                    };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HairOut = subtype01;
        }
        public static void HairLength()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                    "Bald","Very short", "Very short", "Moderately short", "Moderately short","Moderately short",
                    "Medium length","Medium length","Medium length","Medium length",
                    "Slightly long","Slightly long","Slightly long",
                    "Long","Long","Very Long",
                                  };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HairLengthOut = subtype01;
        }
        public static void PsionicPotential()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(01, 101);
            PsionicPotentialOut = DieRoll01.ToString();
        }
        public static void MagicItems()
        {
            Random rnd = new Random();
            int DieRoll01 = rnd.Next(01, 101);
            //arf
            if (ExpLevelOut == "12")
            {
                MagicItem01Out = "2 strong magic items";
                Magic01Cnt = 2;
                MagicItem02Out = "3 medium magic items";
                Magic02Cnt = 3;
                MagicItem03Out = "4 weak magic items";
                Magic03Cnt = 4;
            }
            else
            if (ExpLevelOut == "11")
            {
                MagicItem01Out = "2 strong magic items";
                Magic01Cnt = 2;
                MagicItem02Out = "3 medium magic items";
                Magic02Cnt = 3;
                MagicItem03Out = "4 weak magic items";
                Magic03Cnt = 4;
            }
            else
            if (ExpLevelOut == "10")
            {
                MagicItem01Out = "1 strong magic items";
                Magic01Cnt = 1;
                MagicItem02Out = "2 medium magic items";
                Magic02Cnt = 2;
                MagicItem03Out = "3 weak magic items";
                Magic03Cnt = 3;
            }
            else
            if (ExpLevelOut == "09")
            {
                MagicItem01Out = "1 strong magic items";
                Magic01Cnt = 1;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "3 weak magic items";
                Magic03Cnt = 3;
            }
            else
            if (ExpLevelOut == "08")
            {
                MagicItem01Out = "1 strong magic items";
                Magic01Cnt = 1;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "2 weak magic items";
                Magic03Cnt = 2;
            }
            else
            if (ExpLevelOut == "07")
            {
                MagicItem01Out = "1 strong magic items";
                Magic01Cnt = 1;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "2 weak magic items";
                Magic03Cnt = 2;
            }
            else
            if (ExpLevelOut == "06")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "1 weak magic items";
                Magic01Cnt = 1;
            }
            else
            if (ExpLevelOut == "05")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "1 weak magic items";
                Magic03Cnt = 1;
            }
            else
            if (ExpLevelOut == "04")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "1 weak magic items";
                Magic03Cnt = 1;
            }
            else
            if (ExpLevelOut == "03")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "1 weak magic items";
                Magic03Cnt = 1;
            }
            else
            if (ExpLevelOut == "02")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "0 medium magic items";
                Magic02Cnt = 0;
                MagicItem03Out = "1 weak magic items";
                Magic03Cnt = 1;
            }
            else
            if (ExpLevelOut == "01")
            {
                MagicItem01Out = "0 strong magic items";
                Magic01Cnt = 0;
                MagicItem02Out = "1 medium magic items";
                Magic02Cnt = 1;
                MagicItem03Out = "1 weak magic items";
                Magic03Cnt = 1;
            }
        }
        public static void Specialist()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                "Short Sword, double","Short Sword, double","Short Sword, double",
                "Broad Sword, double","Broad Sword, double",
                "Long Sword, double",
                "Long Sword, double",
                "Long Sword, double",
                "Long Sword, double",
                "Long Sword, double",
                "Bastard Sword, double","Bastard Sword, double",
                "Two-Handed Sword, double","Two-Handed Sword, double",
                "Spear, double","Spear, double",
                "Footman's Mace, double",
                "Horseman's Mace, double",
                "Footman's Flail, double",
                "Horseman's Flail, double",
                "Battle Axe, double",
                "Hand Ax, double",
                "Short Bow","Short Bow",
                "Long Bow","Long Bow","Long Bow","Long Bow",
                                                            };

            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            SpecialistOut = subtype01;
        }
        public static void RandomSkills()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                                                            "Accountant",
                                                            "Actor",
                                                            "Adventurer                                        ",
                                                            "Animal Breeding  -Domestic Animals                  ",
                                                            "Animal Breeding  -Meat Animals                      ",
                                                            "Animal Breeding - Mount Animals                     ",
                                                            "Animal Herder                                     ",
                                                            "Animal Training - Mounts (Horses, Donkeys, Etc )    ",
                                                            "Animal Training - Normal Domestic Creatures         ",
                                                            "Animal Training - Special Mounts (Flying, Etc )     ",
                                                            "Animal Training - Wild Subdued Creatures            ",
                                                            "Apothecary",
                                                            "Architect",
                                                            "Armorer - Band And Splint                           ",
                                                            "Armorer - Barding                                   ",
                                                            "Armorer - Leather                                   ",
                                                            "Armorer - Plate                                     ",
                                                            "Armorer - Ring And Chain                            ",
                                                            "Armorer - Shield                                    ",
                                                            "Artist                                            ",
                                                            "Astrologer",
                                                            "Baker                                             ",
                                                            "Banker",
                                                            "Basket Maker                                      ",
                                                            "Blacksmith                                        ",
                                                            "Boat Builder                                      ",
                                                            "Bodyguard",
                                                            "Bookmaker/Binder                                  ",
                                                            "Brewer                                            ",
                                                            "Bricklayer                                        ",
                                                            "Brickmaker                                        ",
                                                            "Butcher                                           ",
                                                            "Cabinetmaker",
                                                            "Candle Maker                                      ",
                                                            "Carpenter                                         ",
                                                            "Carpetmaker                                       ",
                                                            "Cartographer                                      ",
                                                            "Cheesemaker",
                                                            "Chemist                                           ",
                                                            "Cloth Weaver Common - Cotton, Etc                 ",
                                                            "Cloth Weaver Fine - Silk, Satin                   ",
                                                            "Cloth Weaver Good - Linen, Etc                    ",
                                                            "Constable",
                                                            "Cooper",
                                                            "Distiller                                         ",
                                                            "Doctor                                            ",
                                                            "Embalmer                                          ",
                                                            "Engineer - Architect                                ",
                                                            "Engineer - Artillerist                              ",
                                                            "Engineer - Sapper/Miner                             ",
                                                            "Explorer                                          ",
                                                            "Falconer                                          ",
                                                            "Farmer - Fruits                                     ",
                                                            "Farmer - Grains                                     ",
                                                            "Farmer - Roots And Tubers                           ",
                                                            "Farmer - Vegetables                                 ",
                                                            "Farrier",
                                                            "Fisherman",
                                                            "Forester                                          ",
                                                            "Fowler",
                                                            "Fur Trader                                        ",
                                                            "Furniture Maker                                   ",
                                                            "Gambler                                           ",
                                                            "Gardner",
                                                            "Gemcutter                                         ",
                                                            "Geologist                                         ",
                                                            "Glassblower                                       ",
                                                            "Grainseller                                       ",
                                                            "Herbalist                                         ",
                                                            "Hunter                                            ",
                                                            "Innkeeper                                         ",
                                                            "Interpreter                                       ",
                                                            "Inventor                                          ",
                                                            "Jeweler                                           ",
                                                            "Lawyer",
                                                            "Leatherworker - Scabbards                           ",
                                                            "Leatherworker - Shoes                               ",
                                                            "Leatherworker - Tack, Saddles                       ",
                                                            "Leatherworker - Whips, Misc                         ",
                                                            "Librarian",
                                                            "Locksmith                                         ",
                                                            "Lumberer                                          ",
                                                            "Mason, Stone                                      ",
                                                            "Mathematician",
                                                            "Merchant - Average                                ",
                                                            "Merchant - Poor                                   ",
                                                            "Merchant - Wealthy                                ",
                                                            "Metallurgist                                      ",
                                                            "Metalsmith, Precious - Adamantite                 ",
                                                            "Metalsmith, Precious - Copper And Lesser Metals   ",
                                                            "Metalsmith, Precious - Gold                       ",
                                                            "Metalsmith, Precious - Mithral                    ",
                                                            "Metalsmith, Precious - Platinum                   ",
                                                            "Metalsmith, Precious - Silver And Electrum        ",
                                                            "Metalsmith, common - tin",
                                                            "Metalsmith, common - brass",
                                                            "Miner - copper                                    ",
                                                            "Miner - tin                                    ",
                                                            "Miner - iron                                    ",
                                                            "Miner - coal                                    ",
                                                            "Musician                                          ",
                                                            "Navigator - Fresh Water                           ",
                                                            "Navigator - Salt Water                            ",
                                                            "No Skill                                          ",
                                                            "Nobility - Knight, first circle                   ",
                                                            "Oysterman",
                                                            "Painter",
                                                            "Perfumer",
                                                            "Pimp                                              ",
                                                            "Plumber                                           ",
                                                            "Poet                                              ",
                                                            "Policeman",
                                                            "Portraitist",
                                                            "Potter                                            ",
                                                            "Printer                                           ",
                                                            "Restauranteur                                     ",
                                                            "Roofer",
                                                            "Ropemaker                                         ",
                                                            "Sailor                                            ",
                                                            "Scholar                                           ",
                                                            "Scribe                                            ",
                                                            "Sculptor                                          ",
                                                            "Ship Builder                                      ",
                                                            "Ship Captain                                      ",
                                                            "Singer/Songwriter                                 ",
                                                            "Skinner",
                                                            "Slaver                                            ",
                                                            "Stonemason",
                                                            "Surgeon                                           ",
                                                            "Tailor                                            ",
                                                            "Tavern Keeper                                     ",
                                                            "Teacher                                           ",
                                                            "Teamster                                          ",
                                                            "Tracker                                           ",
                                                            "Trapper                                           ",
                                                            "Wagon Builder                                     ",
                                                            "Weapons Maker - Arrows And Quarrels               ",
                                                            "Weapons Maker - Axes, Pole Arms, Spears, Lances   ",
                                                            "Weapons Maker - Flail, Mace, Hammer, Morning Star ",
                                                            "Weapons Maker - Staff, Club, Bo Stick, Javelin    ",
                                                            "Weapons Maker - Swords, Daggers, Scimitars        ",
                                                            "Wheelwright",
                                                            "Writer                                            ",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            RandomSkillOut = subtype01;

            System.Threading.Thread.Sleep(400);
        }
        public static void NonWeaponProfs()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                                                            "Acting                         ",
                                                            "Administration                 ",
                                                            "Agriculture                    ",
                                                            "Alertness                      ",
                                                            "Alms                           ",
                                                            "Anatomy                        ",
                                                "Ancient Geography              ",
                                                            "Ancient History                ",
                                                            "Animal Handling                ",
                                                            "Animal Lore                    ",
                                                            "Animal Noise                   ",
                                                            "Animal Rending                 ",
                                                            "Animal Training                ",
                                                            "Appraising                     ",
                                                            "Arcanology                     ",
                                                            "Armourer                       ",
                                                            "Armourer, Crude                ",
                                                            "Artistic Ability               ",
                                                            "Assimilation                   ",
                                                            "Astrology                      ",
                                                            "Athletics                      ",
                                                            "Awareness                      ",
                                                            "Bartering                      ",
                                                            "Begging                        ",
                                                            "Blacksmithing                  ",
                                                            "Blind-Fighting                 ",
                                                            "Boating                        ",
                                                            "Boatwright                     ",
                                                            "Bookbinding                    ",
                                                            "Bowyer/Fletcher                ",
                                                            "Bowyer/Fletcher, Crude         ",
                                                "Brewing                        ",
                                                            "Bureaucracy                    ",
                                                            "Calligraphy                    ",
                                                            "Camouflage                     ",
                                                            "Carpentry                      ",
                                                            "Cartography                    ",
                                                            "Catnap                         ",
                                                            "Caving                         ",
                                                            "Ceremony                       ",
                                                            "Chanting                       ",
                                                            "Charioteering                  ",
                                                            "Cheesemaking                   ",
                                                            "Chicanery                      ",
                                                            "City Familiarity               ",
                                                            "Clockwork Creation             ",
                                                            "Close-quarters Fighting        ",
                                                            "Clothesmaking, Crude           ",
                                                            "Cobbling                       ",
                                                            "Concentration                  ",
                                                            "Concocting                     ",
                                                            "Cooking                        ",
                                                            "Craft Instrument               ",
                                                            "Crowd Working                  ",
                                                            "Dancing                        ",
                                                            "Danger Sense                   ",
                                                            "Debate                         ",
                                                            "Diagnostics                    ",
                                                            "Diplomacy                      ",
                                                            "Direction Sense                ",
                                                            "Disguise                       ",
                                                "Display Weapon Prowess         ",
                                                            "Distance Sense                 ",
                                                            "Dowsing                        ",
                                                            "Dreamerpretation               ",
                                                            "Drinking                       ",
                                                            "Eating                         ",
                                                            "Enamour                        ",
                                                            "Endurance                      ",
                                                            "Engineering                    ",
                                                            "Escape                         ",
                                                            "Etiquette                      ",
                                                            "Falconry                       ",
                                                            "Fast Draw                      ",
                                                            "Fast-Talking                   ",
                                                            "Feign/Detect Sleep             ",
                                                            "Fire-Building                  ",
                                                            "Fishing                        ",
                                                            "Flower Arranging               ",
                                                            "Foraging                       ",
                                                            "Forgery                        ",
                                                            "Fortune Telling                ",
                                                            "Fungi Recognition              ",
                                                            "Gaming                         ",
                                                            "Gem Cutting                    ",
                                                            "Genie Lore                     ",
                                                            "Geography                      ",
                                                            "Glassblowing                   ",
                                                            "Grooming                       ",
                                                            "Haggling                       ",
                                                            "Healing                        ",
                                                "Heraldry                       ",
                                                            "Herbalism                      ",
                                                            "Hiding                         ",
                                                            "Hold Breath                    ",
                                                            "Hunting                        ",
                                                            "Hypnosis                       ",
                                                            "Hypnotism                      ",
                                                            "Information Gathering          ",
                                                            "Intimidation                   ",
                                                            "Investigation                  ",
                                                            "Juggling                       ",
                                                            "Jumping                        ",
                                                            "Landscape Gardening            ",
                                                            "Languages, Ancient             ",
                                                            "Languages, Modern              ",
                                                            "Law                            ",
                                                            "Leadership                     ",
                                                            "Leather Working                ",
                                                            "Light Sleeping                 ",
                                                            "Local History                  ",
                                                            "Locksmithing                   ",
                                                            "Looting                        ",
                                                            "Masseur                        ",
                                                            "Meditative Focus               ",
                                                            "Medium                         ",
                                                            "Metalworking                   ",
                                                            "Military Science               ",
                                                            "Mining                         ",
                                                            "Mountaineering                 ",
                                                            "Musical Instrument             ",
                                                "Navigation                     ",
                                                            "Necrology                      ",
                                                            "Netherworld Knowledge          ",
                                                            "Night Vision                   ",
                                                            "Numeracy                       ",
                                                            "Numerology                     ",
                                                            "Observation                    ",
                                                            "Omen Reading                   ",
                                                            "Omenerpretation                ",
                                                            "Oratory                        ",
                                                            "Origami                        ",
                                                            "Painting                       ",
                                                            "Papermaking                    ",
                                                            "Persuasion                     ",
                                                            "Pest Control                   ",
                                                            "Philosophy                     ",
                                                            "Planar Direction Sense         ",
                                                            "Planar Sense                   ",
                                                            "Planar Survival                ",
                                                            "Planology                      ",
                                                            "Poetry                         ",
                                                            "Poisoner                       ",
                                                            "Politics                       ",
                                                            "Pottery                        ",
                                                            "Prestidigitation               ",
                                                "Quick Study                    ",
                                                            "Reading Lips                   ",
                                                            "Reading/Writing                ",
                                                            "Rejuvenation                   ",
                                                            "Religion                       ",
                                                            "Research                       ",
                                                            "Rhetoric                       ",
                                                            "Riding, Airborne               ",
                                                            "Riding, Land-based             ",
                                                            "Riding, Sea-based              ",
                                                            "Rope Use                       ",
                                                            "Rowing                         ",
                                                            "Running                        ",
                                                            "Sage Knowledge                 ",
                                                            "Scribe                         ",
                                                            "Sculpting                      ",
                                                            "Seamanship                     ",
                                                            "Seamstress/Tailor              ",
                                                            "Sense Motive                   ",
                                                            "Set Snares                     ",
                                                            "Sign Language                  ",
                                                            "Signalling                     ",
                                                            "Silk Making                    ",
                                                            "Singing                        ",
                                                            "Slow Respiration               ",
                                                            "Smelting                       ",
                                                            "Soothsaying                    ",
                                                            "Sound Analysis                 ",
                                                            "Sound Imitation                ",
                                                            "Spell Recovery                 ",
                                                "Spellcraft                     ",
                                                            "Spelunking                     ",
                                                            "Spirit Lore                    ",
                                                            "Stonemasonry                   ",
                                                            "Style Analysis                 ",
                                                            "Survival                       ",
                                                            "Swimming                       ",
                                                            "Tactics                        ",
                                                            "Tactics of Magic               ",
                                                            "Tattooing                      ",
                                                            "Tea Ceremony                   ",
                                                            "Thaumaturgy                    ",
                                                            "Tightrope Walking              ",
                                                            "Time Sense                     ",
                                                            "Toxicology                     ",
                                                            "Tracking                       ",
                                                            "Trail Marking                  ",
                                                            "Trail Signs                    ",
                                                            "Trailing                       ",
                                                            "Tumbling                       ",
                                                            "Undead Knowledge               ",
                                                            "Undead Lore                    ",
                                                            "Underclass                     ",
                                                            "Ventriloquism                  ",
                                                            "Vetinary Healing               ",
                                                            "Voice Mimicry                  ",
                                                            "Water Walking                  ",
                                                            "Weapon Improvisation           ",
                                                            "Weaponsmithing                 ",
                                                            "Weaponsmithing, Crude          ",
                                                "Weather Sense                  ",
                                                            "Weaving                        ",
                                                            "Whistling/Humming              ",
                                                            "Wild Fighting                  ",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            RandomSkillOut = subtype01;

            System.Threading.Thread.Sleep(400);
        }
        public static void Outlook()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "Optimist", "Pessimist", "Hedonist", "Altruist", "Helpful", "Careless", "Capricious", "Sober",
                "Capricious", "Moody", "Trusting", "Suspicious", "Precise", "Perceptive","Opinionated", "Violent","Studious", "Barbaric",
                "Callous", "Prankster", "Servile", "Fanatical", "Malevolent"
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            OutlookOut = subtype01;
        }
        public static void Personality()
        {
            Random rnd = new Random();
            string[] SubType01 =
            {
                 "modest", "egoist/arrogant", "friendly", "aloof", "hostile", "well-spoken", "diplomatic", "abrasive",
                 "modest", "egoist/arrogant", "friendly", "aloof", "hostile", "well-spoken", "diplomatic", "abrasive",
                 "modest", "egoist/arrogant", "friendly", "aloof", "hostile", "well-spoken", "diplomatic", "abrasive",
                 "modest", "egoist/arrogant", "friendly", "aloof", "hostile", "well-spoken", "diplomatic", "abrasive",
                 "modest", "egoist/arrogant", "friendly", "aloof", "hostile", "well-spoken", "diplomatic", "abrasive",

                 "forceful", "retiring", "overbearing", "taciturn", "friendly", "friendly", "blustering", "aloof",
                 "antagonistic", ",hostile", "rude", "rude", "rash", "courteous", "diplomatic", "solitary/secretive",
                 "pollyanna",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            PersonalityOut = subtype01;
        }
        public static void Disposition()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "cheerful", "morose", "compassionate/sensitive","unfeeling/insensitive","humble",
                "proud/haughty","even tempered","hot tempered","easy going","harsh",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DispositionOut = subtype01;
        }

        public static void Motives1()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
               "On The Run, commited political crime, ",
               "On The Run, escaped from jail, ",
               "On The Run, committed minor crime ",
               "On The Run, committed major crime ",
               "On The Run, committed religious crime, ",
               "On The Run, got entangled with criminal underground, ",
               "On The Run, unjustly accused of minor crime, ",
               "On The Run, unjustly accused of major crime, ",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut01 = subtype01;
        }
        public static void Motives1a()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
               "by an ex-friend, ",
               "by an ex-friend, ",
               "by an angry constable, ",
               "by an angry constable, ",
               "by a business rival, ",
               "by a business rival, ",
               "by a local thug, ",
               "by a local thug, ",
               "by a romantic rival, ",
               "by a romantic rival, ",
               "by a spiteful boss, ",
               "by a spiteful boss, ",
               "by a family member, ",
               "by a family member, ",
               "by a politician or political group, ",
               "by a powerful thief or assassin",
               "by a noble's family, ",
               "by a temple, ",
               "by a powerful mage, ",
               "by a mercentary company, ",
               "by a powerful adventurer, ",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut02 = subtype01;
        }

        public static void Motives1b()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "for freeing an innocent person",
                "for correcting a long-standing error in justice",
                "for helping unpopular people with money",
                "for spreading a political message",
                "for spreading a religious message",
                "for helping poor children",
                "for helping the sick",
                "used a powerful magic item to help someone",
                "humiliated a rival",
                "stole an extortion payoff",
                "stole from friends",
                "killed a rival",
                "destroyed a business",
                "spread a harmful political message",
                "spread false rumors about a powerful person",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut03 = subtype01;
        }

        public static void Motives2()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
               "On a vendetta, wrongfully jailed, ",
               "On a vendetta, out to kill all (random type of creature), ",
               "On a vendetta, out to punish thieves, ",
               "On a vendetta, out to punish murderers,  ",
               "On a vendetta, out to ruin religious crusaders, ",
               "On a vendetta, out to ruin political opponents, ",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut01 = subtype01;
        }
        public static void Motives3()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "Searching for information about an enemy",
                "Searching for information about a minor magic item",
                "Searching for information about a small amount of treasure",
                "Searching for information about property they believe was left to them",
                "Searching for information about a particular ally",
                "Searching for information that a powerful adventurer would well reward them for",
                "Searching for information to help deal with a family problem",
                "Searching for information about a rumor about a noble",
                "Searching for information about information that they have about the group",
                "Searching for information about information that they have about an enemy of the group",
                "Searching for information about something important about the nearby area",
                "Searching for information about a minor enemy of thiers",
                "Searching for information about a major enemy of theirs",
                "Searching for information about an upcoming danger",
                "Searching for information about a political event",
                "Searching for information about a religious event",
                "Searching for information about a powerful monster nearby",
                "Searching for information about an artifact",
                "Searching for information about a large treasure",
                "Searching for information about a magic item",
                "Searching for information an important item of local history",
                "Searching for information a work of art",
                "Searching for information a long-lost relative",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut01 = subtype01;
            MotivesOut02 = "";
            MotivesOut03 = "";
        }
        public static void Motives4()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "Wants to become wealthy and powerful, plans to retire when they have 10,000 more gold",
                "Wants to become wealthy and powerful, plans to retire when they have 20,000 more gold",
                "Wants to become wealthy and powerful, plans to retire when they have 40,000 more gold",
                "Wants to become wealthy and powerful, plans to retire when they have 100,000 more gold",
                "Wants to become wealthy and powerful, plans to retire when they have 150,000 more gold",
                "Wants to become wealthy and powerful, plans to retire when they have 200,000 more gold",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotivesOut01 = subtype01;
            MotivesOut02 = "";
            MotivesOut03 = "";

        }


        public static void Nature()
        {
            Random rnd = new Random();
            string[] SubType01 =
                {
                "soft-hearted","forgiving","hard-hearted","unforgiving","jealous","vengeful",
                };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            NatureOut = subtype01;
        }
        public static void Interests()
        {
            Random rnd = new Random();
            string[] SubType01 =
            {
                "religion","legends","history","nature","horticulture","husbandry","exotic animals","hunting",
                "fishing","handicrafts","athletics","politics","wines","spirits","foods & preparation","gambling",
                "drugs","collector","community service","altruism",
                "folklore",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            InterestsOut = subtype01;
        }
        public static void RandomName()
        {
            Random rnd = new Random();
            N01 = " ";
            N02 = " ";
            N03 = " ";
            N04 = " ";
            N05 = " ";
            N06 = " ";
            N07 = " ";
            N08 = " ";

            int namevar01 = rnd.Next(1, 11);

            if (namevar01 < 4)

                StartsWithVowel();
            else

                StartsWithConsonant();
        }
        public static void StartsWithVowel()
        {
            {
                Random rnd = new Random();
                int namevar02 = rnd.Next(4, 8);
                if (namevar02 == 3)
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowEnd();
                    N03 = VowOut;
                }
                else
                if (namevar02 == 4)
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowMid();
                    N03 = VowOut;
                    ConEnd();
                    N04 = ConOut;
                }
                else
                if (namevar02 == 5)
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowMid();
                    N03 = VowOut;
                    ConMid();
                    N04 = ConOut;
                    VowEnd();
                    N05 = VowOut;
                }
                else
                if (namevar02 == 6)
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowMid();
                    N03 = VowOut;
                    ConMid();
                    N04 = ConOut;
                    VowMid();
                    N05 = VowOut;
                    ConEnd();
                    N06 = ConOut;
                }
                else
                if (namevar02 == 7)
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowMid();
                    N03 = VowOut;
                    ConMid();
                    N04 = ConOut;
                    VowMid();
                    N05 = VowOut;
                    ConEnd();
                    N06 = ConOut;
                    //VowEnd();
                    //N07 = VowOut;
                }
                else
                {
                    VowBeg();
                    N01 = VowOut;
                    ConMid();
                    N02 = ConOut;
                    VowMid();
                    N03 = VowOut;
                    ConMid();
                    N04 = ConOut;
                    VowMid();
                    N05 = VowOut;
                    ConMid();
                    N06 = ConOut;
                    VowMid();
                    N07 = VowOut;
                    ConEnd();
                    N08 = ConOut;
                }
            }
        }
        public static void StartsWithConsonant()
        {
            {
                Random rnd = new Random();
                int namevar02 = rnd.Next(4, 8);
                if (namevar02 == 3)
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConEnd();
                    N03 = ConOut;
                }
                else
                if (namevar02 == 4)
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConMid();
                    N03 = ConOut;
                    VowEnd();
                    N04 = VowOut;
                }
                else
                if (namevar02 == 5)
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConMid();
                    N03 = ConOut;
                    VowMid();
                    N04 = VowOut;
                    ConEnd();
                    N05 = ConOut;
                }
                else
                if (namevar02 == 6)
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConMid();
                    N03 = ConOut;
                    VowMid();
                    N04 = VowOut;
                    ConEnd();
                    N05 = ConOut;
                    //VowEnd();
                    //N06 = VowOut;
                }
                else
                if (namevar02 == 7)
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConMid();
                    N03 = ConOut;
                    VowMid();
                    N04 = VowOut;
                    ConMid();
                    N05 = ConOut;
                    VowMid();
                    N06 = VowOut;
                    ConEnd();
                    N07 = ConOut;
                }
                else
                {
                    ConBeg();
                    N01 = ConOut;
                    VowMid();
                    N02 = VowOut;
                    ConMid();
                    N03 = ConOut;
                    VowMid();
                    N04 = VowOut;
                    ConMid();
                    N05 = ConOut;
                    VowMid();
                    N06 = VowOut;
                    ConEnd();
                    N07 = ConOut;
                    //VowEnd();
                    //N08 = VowOut;
                }
            }
        }
        public static void VowBeg()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                                                            "A","E","I","O",
                                                            "A","E","I","O",
                                                            "A","E","I","O",
                                                            "A","E",
                                                            "A","E",
                                                            "Ai",
                                                            "Ea","Ei",
                                                            "A","A","E","E","A","A",
                                                            "A","A","E","E","A","A",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            VowOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void VowMid()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                                                            "a","e","i","o","u",
                                                            "a","e","i","o",
                                                            "a","e","i",
                                                            "a","e",
                                                            "a","e","o",
                                                            "a","e",
                                                            "ai","au",
                                                            "ea","ee",
                                                            "ia",
                                                            "a","e","o","a","e","o","a","e","i",
                                                            "a","e","o","a","e","o","a","e","i",
                                                            "a","e","o","a","e","o","a","e","i",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            VowOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void VowEnd()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                                                            "a","e","i","o","u",
                                                            "a","e","i","o",
                                                            "a","e","i","o",
                                                            "a","e","o",
                                                            "a","e","o",
                                                            "a","e",
                                                            "a","e",
                                                            "ee","ia","io",
                                                            "oe",
                                                            "e","e","e","e","e","e","y",
                                                            "e","e","e","e","a","a",
                                                            "e","e","e","e","a","a","e","e",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            VowOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void ConBeg()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                //"B","C","D","F","G","H","J",
                //"K","L","M","N","P","R",
                //"S","T","V","W","X",
                //"B","C","D","F","G","H","J",
                //"K","L","M","N","P","Qu","R",
                //"S","T","V","W",
                //"B","C","D","F","G","H","J",
                //"L","M","N","P","R",
                //"S","T","V","W",
                //"B","C","D","F","G","H","J",
                //"L","M","N","P","R",
                //"S","T","V","W",
                //"B","C","D","F","G","H","J",
                //"L","M","N","P","R",
                //"S","T","V","W",
                //"B","C","D","F","G","H","J",
                //"K","L","M","N","P","R",
                //"S","T","W",
                //"B","C","D","F","G","H","J",
                //"K","L","M","N","P","R",
                //"S","T","W",
                "Br","Ch","Cl","Cr",
                //"Dh","Dr",
                //"Fl","Fr","Gl","Gr",
                //"Hr","Kl","Pr","Pl",
                //"Qu","Rh","Sc","Sh","Sk","Sl","Sm","Sp","Squ","St","Sw",
                //"Th","Tr","Wr","Wh","Thr",
                //"Bl","Br","Ch","Cl","Cr",
                //"Dr",
                //"Fl","Fr","Gl","Gr",
                //"Kr","Pl",
                //"Qu","Sc","Sh","Sk","Sl","Sm","Sn","Sp","Squ","St","Sw",
                "Th","Tr","Wh","Thr",
                //"J","R","M","W","D","T","Th","Ch","D","M","D","P","St","K",
                //"G","J","B","R","T","J","R","G","N","L","Sc","Fr","Br","R","G",
                //"B","S","P","J","D","T",
    //            "J","R","M","W","D","T","Th","Ch","D","M","D","P","St","K",
    //            "G","J","B","R","T","J","R","G","N","L","Sc","Fr","Br","R","G",
    //            "B","S","P","J","D","T",
                                                            //"J","R","M","W","D","T","Th","Ch","D","M","D","P","St","K",
                                                            //"G","J","B","R","T","J","R","G","N","L","Sc","Fr","Br","R","G",
                                                            //"B","S","P","J","D","T",
                                                            //common Celtic
                                                            "B","C","D","G","K","M",
                                                            "B","C","D","G","M",
                                                            "B","C","D","G","M",
                                                            "B","C","D","G","M",
                                                            "B","C","D","G","M",
                                                            "B","C","D","G","M",
                                                            "Br","Gw",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ConOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void ConMid()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                //"b","c","d","f","g","h","j",
                //"k","l","m","n","p","r",
                //"s","t","v","w",
                //"b","c","d","f","g","h","j",
    //            "k","l","m","n","p","r",
    //            "s","t",
    //            "b","c","d","f","g","h",
    //            "k","l","m","n","p","r",
    //            "s","t",
    //            "b","c","d","f","g","h",
    //            "k","l","m","n","p","r",
    //            "s","t",
    //            "b","c","d","f","g","h",
    //            "k","l","m","n","p","r",
    //            "s","t",
    //            "b","c","d","f","g","h",
    //            "k","l","m","n","p","r",
    //            "s","t",
    //            "ch",
    //            "dl","dn",
    //            "ff",
    //            "gg","gh",
    //            "ht",
    //            "ll","ld","ls","lt","lv",
    //            "mg","mm","mt",
    //            "nc","nd","ng","nn","nr","ns","nt",
    //            "rd","rm","rn","rr","rt",
    //            "th","tr",
    //            "thr",
    //            "ch","ck","cr",
    //            "ff","fl",
    //            "gg","gl",
    //            "ll",
    //            "mm","ms",
    //            "ng","nn","ns","nt",
    //            "ph",
    //            "rp","rr","rs","rt",
    //            "th","tr",
    //            "thr",
    //            "m","b","ll","ch","v","m","rl","n","tth","th","nth","n","v","nd","nn","sh",
    //            "v","n","m","s","r","c","ch","r","n","th","rr","st","nd","g",
    //            "m","tr","nd",
    //            "m","b","ll","ch","v","m","n","tth","th","nth","n","v","nd","nn","sh",
    //            "v","n","m","s","ffr","r","c","ch","r","n","th","rr","st","nd","g",
    //            "m","tr","nd",
                                                            //"m","b","ll","ch","v","m","n","tth","th","nth","n","v","nd","nn","rg","sh",
                                                            //"v","n","m","s","r","c","ch","r","n","th","rr","st","nd","g",
                                                            //"m","tr","x","nd",
                                                            // from common Celtic names
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                                            "m","f","l","n","r","th","ns","str","ll","nn","gh","phr","rd","s",
                                             };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ConOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void ConEnd()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                //"b","c","d","f","g","h",
                //"k","l","m","n","p","r",
                //"s","t",
                //"b","c","d","f","g","h",
                //"k","l","m","n","p","r",
                //"s","t",
                //"b","c","d","f","g","h",
                //"k","l","m","n","p","r",
                //"s","t",
                //"b","c","d","g","h",
                //"k","l","m","n","p","r",
                //"s","t",
                //"b","c","d","g","h",
                //"k","l","m","n","p","r",
                //"s","t",
    //            "ch","ck",
    //            "ds",
    //            "ff","ft",
    //            "gg","gh",
    //            "ll","ld","lm","ls","lt",
    //            "ms",
    //            "nd","ng","nk","nn","ns","nt",
    //            "ph",
    //            "rd","rl","rm","rn","rs","rt",
    //            "th",
    //            "bs",
    //            "ch","ck",
    //            "ds",
    //            "ft",
    //            "ll","ld","ls","lt",
    //            "ms",
    //            "nd","ns","nt",
    //            "ps",
    //            "rd","rf","rg","rk","rm","rn","rs","rt",
    //            "th",
    //            "s","hn","rt","l","m","d","rd","ph","s","r","l","w","ny","ld","rk","l","n","w","th",
    //            "n","n","rd","ld","thy","n","y","n","b","s","c","n","n","tt","nk","n","nd","n","l","ck",
    //            "r","ck","s",
    //            "s","rt","l","m","d","rd","ph","s","r","l","w","ny","ld","rk","l","n","w","th",
    //            "n","n","rd","ld","thy","n","y","n","b","s","c","n","n","tt","nk","n","nd","n","l","ck",
    //            "r","ck","s",
                                                            "s","rt","l","m","d","rd","ph","s","r","l","w","ny","ld","rk","l","n","w","th",
                                                            "n","n","rd","ld","thy","n","y","n","b","s","c","n","n","nk","n","nd","n","l","ck",
                                                            "r","ck","s",
                                                            //from common Celtic names
                                                            "l","c","n","n","n","g","s","t",
                                                            "l","c","n","n","n","g","s","t",
                                                            "l","c","n","n","n","g","s","t",
                                                            "l","c","n","n","n","g","s","t",
                                                            "l","c","n","n","n","g","s","t",
                                                            "l","c","n","n","n","g","s","t",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ConOut = subtype01;
            System.Threading.Thread.Sleep(100);
        }
        public static void HumanLangs()
        {
            if (HmenIntOut == "8")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "9")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "10")
                NbrOfAddLangs = 2;
            else
            if (HmenIntOut == "11")
                NbrOfAddLangs = 2;
            else
            if (HmenIntOut == "12")
                NbrOfAddLangs = 3;
            else
            if (HmenIntOut == "13")
                NbrOfAddLangs = 3;
            else
            if (HmenIntOut == "14")
                NbrOfAddLangs = 4;
            else
            if (HmenIntOut == "15")
                NbrOfAddLangs = 4;
            else
            if (HmenIntOut == "16")
                NbrOfAddLangs = 5;
            else
            if (HmenIntOut == "17")
                NbrOfAddLangs = 6;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 7;

            RacialLangs = " ";
        }
        public static void ElfLangs()
        {
            if (HmenIntOut == "16")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "17")
                NbrOfAddLangs = 2;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 3;

            RacialLangs = "elf, gnome, halfling, goblin, hobgoblin, orc, gnoll, common";
        }
        public static void GnomeLangs()
        {
            if (HmenIntOut == "16")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "17")
                NbrOfAddLangs = 2;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 3;

            RacialLangs = "elf, gnome, halfling, goblin, hobgoblin, orc, gnoll, common";
        }
        public static void HalfElfLangs()
        {
            if (HmenIntOut == "17")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 2;

            RacialLangs = "elf, gnome, halfling, goblin, hobgoblin, orc, gnoll, common";
        }
        public static void HalflingLangs()
        {
            if (HmenIntOut == "17")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 2;

            RacialLangs = "dwarf, elf, gnome, halfling, goblin, hobgoblin, orc, common";
        }
        public static void HalfOrcLangs()
        {
            if (HmenIntOut == "17")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 2;

            RacialLangs = "orc, common";
        }
        public static void DwarfLangs()
        {
            if (HmenIntOut == "17")
                NbrOfAddLangs = 1;
            else
            if (HmenIntOut == "18")
                NbrOfAddLangs = 2;

            RacialLangs = "dwarf, gnome, goblin, kobold, orc, common";
        }
        public static void RandomLanguages()
        {
            Random rnd = new Random();

            string[] SubType01 = {

              "Aarocockra",
                "Aboleth", "Achaierai", "Adherer", "Aerial Servant", "Afanc", "Agathion",
                    "Al-MiRaj            ", "Aleax               ", "Algoid              ",
                    "Amitok              ", "Annis               ", "Anuchu              ",
                    "Archon              ", "Astral Searcher     ", "Atomie              ",
                    "Azer",
                    "Babbler",
                    "Baka                ", "Baku                ", "Barghest            ",
                    "Berbalang","Booka",
                    "Beholder            ", "Black Annis         ", "Blink Dog           ",
                    "Boggart","Buckawn",
                    "Brownie             ", "Bugbear             ", "Callicantzaros      ",
                    "Cat Lord            ", "Centaur             ",
                    "Child of Set        ", "Chimera             ", "Clakar              ",
                    "Cloud Child         ", "Cold Spawn          ",
                    "Couatl",
                "Crabman             ",
                    "Crypt Thing         ", "Cyclops             ", "Daemon              ",
                    "Dakon               ", "Dao                 ", "Dark Creeper        ",
                    "Dark Stalker        ", "Death Angel         ", "Death Child         ",
                    "Death, Crimson      ", "Death Knight        ", "Deep One            ",
                    "Demodand            ", "Demon               ", "Denzelian           ",
                    "Derro               ", "Deva                ", "Devil               ",
                    "Disenchanter",
                    "Diakk               ", "Djinni              ", "Dog Men             ",
                    "Doppleganger        ", "Dragon (common)     ", "Dragon, Aquatic     ",
                    "Dragon, Astral      ", "Dragon Horse        ", "Dragon, Black       ",
                    "Dragon, Blue        ", "Dragon, Brass       ", "Dragon, Bronze      ",
                    "Dragon, Chameleo    ", "Dragon, Cloud       ", "Dragon, Copper      ",
                    "Dragon, Earth       ", "Dragon, Electrum    ", "Dragon, Faerie      ",
                    "Dragon, Gold        ", "Dragon, Green       ", "Dragon, Li Lung     ",
                    "Dragon, Mist        ", "Dragon, Night       ", "Dragon, Pan Lung    ",
                    "Dragon, Red         ", "Dragon, Rock        ", "Dragon, Sand        ",
                    "Dragon, Scintillating", "Dragon, Sea         ", "Dragon, Shadow      ",
                    "Dragon, Shen Lung   ", "Dragon, Stone       ", "Dragon, Storm       ",
                    "Dragon, Swamp       ", "Dragon, Tien Lung   ", "Dragon, Tree        ",
                    "Dragon Turtle",
                    "Dragon, Were        ", "Dragon, Yu Lung     ", "Dragonne            ",
                    "Drider              ", "Dryad               ", "Duergar             ",
                    "Dune Stalker        ", "Dust Children       ", "Dwarf               ",
                    "Eagle, Giant        ", "Efreeti             ", "Elemental (common)  ",
                    "Elemental, Air      ", "Elemental, Earth    ", "Elemental, Fire     ",
                    "Elemental, Water    ", "Elemental, Ooze     ", "Elemental, Dust     ",
                    "Elemental, Magma    ", "Elemental, Minerals ", "Elemental, Smoke    ",
                    "Elemental, Lightning", "Elemental, Dust     ", "Elemental, Vacuum   ",
                    "Elemental, Steam    ", "Elemental, Salt     ", "Elemental, Ash      ",
                    "Elemental, Radiance ", "Elenoin             ", "Elf, Aquatic        ",
                    "Elf, Drow           ", "Elf, Grey           ", "Elf, Grugach        ",
                    "Elf, Valley         ", "Elf (common)        ", "Elf, Wood           ",
                    "Ettin               ",
                "Eye of the Deep", "Firedrake           ", "Firefiend           ",
                "Flind",
                    "Foo Dog             ", "Foo Lion            ", "Frost Man           ",
                    "Gargoyle            ", "Giant (common)      ", "Giant, Cloud        ",
                    "Giant, Fire         ", "Giant, Firbolg      ", "Giant, Fomorian     ",
                    "Giant, Frost        ", "Giant, Hill         ", "Giant Lord          ",
                    "Giant, Mist         ", "Giant, Mountain     ", "Giant, Sea          ",
                    "Giant, Stone        ", "Giant, Storm        ", "Giant, Verbeeg      ",
                    "Githyanki           ", "Githzerai           ", "Gnoll               ",
                    "Gnome               ", "Goblin              ", "Gorgon              ",
                    "Great Race          ", "Greenhag            ", "Groaning Spirit     ",
                    "Grig","Grue",
                    "Guardian Familiar   ", "Halfling            ", "Harpy               ",
                    "Hell Hound          ", "Hippogriff          ", "Hoarder             ",
                    "Hobgoblin           ", "Imp                 ", "Intellect Devourer  ",
                    "Invisible Stalker   ", "Ixitxachitl         ", "Jackalwere          ",
                    "Jermlaine",
                    "Jann                ", "Kelpie              ", "Ki-Rin              ",
                    "Kenku","Korred","Kraken",
                    "Kzinti              ", "Lamia               ", "Lammasu             ",
                    "Lava Children       ", "Lava Men            ", "Leprechaun          ",
                    "Lizard Man          ",
                    "Locathah",
                "Lord of Set         ", "Luposphinx          ","Lynx, Giant",
                    "Lycanthrope         ", "Magnesium Spirit    ", "Manticore           ",
                    "Marid               ", "Marut               ", "Medusa              ",
                    "Meenlock","Mihstu",
                    "Mephit              ", "Mermen              ", "Mi-Go               ",
                    "Mind Flayer         ", "Minion of Set       ", "Minotaur            ",
                    "Morkoth",
                    "Modron              ", "Mongrelman          ", "Mud-Man             ",
                    "Musical Spirit      ", "Naga                ", "Needleman           ",
                    "Modron              ", "Mongrelman          ", "Mud-Man             ",
                    "Musical Spirit      ", "Naga                ", "Needleman           ",
                    "Neo-Otyugh","Nereid",
                    "Night Hag           ", "Nightmare           ", "Nilbog              ",
                    "Nixie               ", "Ogre                ", "Ogre Magi           ",
                    "Ogrillon            ", "Orc                 ", "Owlbear             ",
                    "Opinicus",
                    "Pegasus             ", "Phantom             ", "Phoenix             ",
                    "Peryton","Pech",
                    "Pixie               ", "Poltergeist         ", "Pseudo-Dragon       ",
                    "Quasit              ", "Quickling           ", "Rakshasa            ",
                    "Roper",
                    "Sahuagin            ", "Salamander          ", "Sandgorgon          ",
                    "Sandman             ", "Satyr               ", "Sea Hag             ",
                    "Selkie              ", "Shadow Demon        ", "Shedu               ",
                    "Shocker             ", "Sind                ", "Sirine              ",
                    "Skulk               ", "Slaad               ", "Snyad               ",
                    "Spectator           ", "Sphinx              ", "Spriggan            ",
                    "Sprite              ", "Svirfneblin         ", "Swanmay             ",
                    "Storoper",
                    "Su Monster","Sylph","Tabaxi","Thri-Kreen",
                    "Titan               ", "Treant              ", "Triton              ",
                    "Troll               ", "Unicorn             ", "Uttukku             ",
                    "Umber Hulk","Unicorn","Vagabond",
                    "Valkyrie Lord       ", "Vision              ", "Water Demon         ",
                    "Water Weird","Wind Walker",
                    "Wendigo             ", "Wind Steed          ", "Wood Giant          ",
                    "Xorn","Xill",
                    "Xvart               ", "Yuan Ti             "
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];

            Console.WriteLine("    " + subtype01);
            if (NOAL == 1)
                Lang01 = subtype01;
            else
            if (NOAL == 2)
                Lang02 = subtype01;
            else
            if (NOAL == 3)
                Lang03 = subtype01;
            else
            if (NOAL == 4)
                Lang04 = subtype01;
            else
            if (NOAL == 5)
                Lang05 = subtype01;
            else
            if (NOAL == 6)
                Lang06 = subtype01;
            else
            if (NOAL == 7)
                Lang07 = subtype01;

            System.Threading.Thread.Sleep(100);
        }
        public static void HumanAge()
        {
            Random rnd = new Random();
            int Die4 = rnd.Next(1, 5);
            int Die6 = rnd.Next(1, 7);
            int Die8a = rnd.Next(1, 9);
            int Die8b = rnd.Next(1, 9);

            ConvertLevelToInt();

            //Console.WriteLine("Die4 " + Die4);
            //Console.WriteLine("Die6 " + Die6);
            //Console.WriteLine("Die8a " + Die8a);
            //Console.WriteLine("Die8b " + Die8b);
            //Console.WriteLine("add level to age " + AddLevelToAge);

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid" || HmenClassOut == "Thief")
                HmenAge = (15 + Die4 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Barbarian")
                HmenAge = (15 + Die4 + AddLevelToAge);
            else
            if (HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (15 + Die4 + AddLevelToAge);
            else
            if (HmenClassOut == "Ranger" || HmenClassOut == "Assassin")
                HmenAge = (20 + Die4 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User")
                HmenAge = (24 + Die8a + Die8b + AddLevelToAge);
            else
            if (HmenClassOut == "Illusionist")
                HmenAge = (30 + Die6 + AddLevelToAge);
            else
            if (HmenClassOut == "Monk")
                HmenAge = (21 + Die4 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (25 + Die4 + AddLevelToAge);

            //Console.WriteLine("Hmenage " + HmenAge);

        }
        public static void ElfAge()
        {
            Random rnd = new Random();
            ConvertLevelToInt();

            Die10x10 = 0;
            for (int Elf10D10 = 1; Elf10D10 <= 10; Elf10D10++)
            {
                int Die10 = rnd.Next(1, 10);
                Die10x10 = Die10x10 + Die10;
            }

            Die6x5 = 0;
            for (int Elf5D6 = 1; Elf5D6 <= 10; Elf5D6++)
            {
                int Die6 = rnd.Next(1, 7);
                Die6x5 = Die6x5 + Die6;
            }

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (500 + Die10x10 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Cavalier" || HmenClassOut == "Ranger")
                HmenAge = (130 + Die6x5 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief")
                HmenAge = (100 + Die6x5 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User")
                HmenAge = (150 + Die6x5 + AddLevelToAge);
        }
        public static void GnomeAge()
        {
            Random rnd = new Random();
            int D12x3 = rnd.Next(3, 37);
            int D4x5 = rnd.Next(5, 21);
            int D12x2 = rnd.Next(2, 25);
            int D4x3 = rnd.Next(3, 13);

            ConvertLevelToInt();

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (300 + D12x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Ranger" || HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (60 + D4x5 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User" || HmenClassOut == "Illusionist")
                HmenAge = (100 + D12x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief" || HmenClassOut == "Assassin")
                HmenAge = (80 + D4x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (32 + D4x3 + AddLevelToAge);
        }
        public static void HalfElfAge()
        {
            Random rnd = new Random();
            int D4x2 = rnd.Next(2, 9);
            int D4x3 = rnd.Next(3, 13);
            int D8x2 = rnd.Next(2, 17);
            int D8x3 = rnd.Next(3, 25);

            ConvertLevelToInt();

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (40 + D4x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Ranger" || HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (22 + D4x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User")
                HmenAge = (30 + D8x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief" || HmenClassOut == "Assassin")
                HmenAge = (22 + D8x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (32 + D8x3 + AddLevelToAge);
        }
        public static void HalflingAge()
        {
            Random rnd = new Random();
            int D12x3 = rnd.Next(3, 37);
            int D4x3 = rnd.Next(3, 13);
            int D12x2 = rnd.Next(2, 25);
            int D4x2 = rnd.Next(2, 9);

            ConvertLevelToInt();

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (300 + D12x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Ranger" || HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (20 + D4x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User" || HmenClassOut == "Illusionist")
                HmenAge = (100 + D12x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief" || HmenClassOut == "Assassin")
                HmenAge = (40 + D4x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (32 + D4x3 + AddLevelToAge);
        }
        public static void HalfOrcAge()
        {
            Random rnd = new Random();
            int D4 = rnd.Next(1, 5);
            int D4x3 = rnd.Next(3, 13);
            int D12x2 = rnd.Next(2, 25);
            int D4x2 = rnd.Next(2, 9);

            ConvertLevelToInt();

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (20 + D4 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Ranger" || HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (13 + D4 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User" || HmenClassOut == "Illusionist")
                HmenAge = (100 + D12x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief" || HmenClassOut == "Assassin")
                HmenAge = (20 + D4x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (32 + D4x3 + AddLevelToAge);
        }
        public static void DwarfAge()
        {
            Random rnd = new Random();
            int D20x2 = rnd.Next(2, 41);
            int D4x5 = rnd.Next(5, 21);
            int D8x2 = rnd.Next(2, 17);
            int D6x3 = rnd.Next(3, 25);

            ConvertLevelToInt();

            if (HmenClassOut == "Cleric" || HmenClassOut == "Druid")
                HmenAge = (250 + D20x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Fighter" || HmenClassOut == "Ranger" || HmenClassOut == "Paladin" || HmenClassOut == "Cavalier")
                HmenAge = (40 + D4x5 + AddLevelToAge);
            else
            if (HmenClassOut == "Magic-User")
                HmenAge = (30 + D8x2 + AddLevelToAge);
            else
            if (HmenClassOut == "Thief" || HmenClassOut == "Assassin")
                HmenAge = (75 + D6x3 + AddLevelToAge);
            else
            if (HmenClassOut == "Bard")
                HmenAge = (50 + D6x3 + AddLevelToAge);
        }
        public static void ConvertLevelToInt()
        {
            if (ExpLevelOut == "12")
                AddLevelToAge = 12;
            else
            if (ExpLevelOut == "11")
                AddLevelToAge = 11;
            else
            if (ExpLevelOut == "10")
                AddLevelToAge = 10;
            else
            if (ExpLevelOut == "09")
                AddLevelToAge = 9;
            else
            if (ExpLevelOut == "08")
                AddLevelToAge = 8;
            else
            if (ExpLevelOut == "07")
                AddLevelToAge = 7;
            else
            if (ExpLevelOut == "06")
                AddLevelToAge = 6;
            else
            if (ExpLevelOut == "05")
                AddLevelToAge = 5;
            else
            if (ExpLevelOut == "04")
                AddLevelToAge = 4;
            else
            if (ExpLevelOut == "03")
                AddLevelToAge = 3;
            else
            if (ExpLevelOut == "02")
                AddLevelToAge = 2;
            else
                AddLevelToAge = 1;
        }
        public static void Gold()
        {
            Random rnd = new Random();
            int D100Pct = rnd.Next(51, 101);

            //Console.WriteLine("D100 " + D100Pct);

            if (ExpLevelOut == "12")
                GoldTotal = 300000 * D100Pct / 100;
            else
            if (ExpLevelOut == "11")
                GoldTotal = 200000 * D100Pct / 100;
            else
            if (ExpLevelOut == "10")
                GoldTotal = 100000 * D100Pct / 100;
            else
            if (ExpLevelOut == "09")
                GoldTotal = 50000 * D100Pct / 100;
            else
            if (ExpLevelOut == "08")
                GoldTotal = 20000 * D100Pct / 100;
            else
            if (ExpLevelOut == "07")
                GoldTotal = 10000 * D100Pct / 100;
            else
            if (ExpLevelOut == "06")
                GoldTotal = 5000 * D100Pct / 100;
            else
            if (ExpLevelOut == "05")
                GoldTotal = 2000 * D100Pct / 100;
            else
            if (ExpLevelOut == "04")
                GoldTotal = 1000 * D100Pct / 100;
            else
            if (ExpLevelOut == "03")
                GoldTotal = 500 * D100Pct / 100;
            else
            if (ExpLevelOut == "02")
                GoldTotal = 200 * D100Pct / 100;
            else
                GoldTotal = 100 * D100Pct / 100;

            //Console.WriteLine("Gold " + GoldTotal);
        }
        public static void BirthMonthAndDay()
        {
            Random rnd = new Random();

            string[] SubType01 = {
                "January", "February", "March","April","May","June",
                "July","August","September","October","November","December",
                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            BirthMonthOut = subtype01;

            DayOfMonth = rnd.Next(1, 29);
        }

        public static void HmenAlignLimit()
        {
            if (HmenAlignIn == "LG")
            {
                ConvertedAlign = "Lawful Good";
                HenchClassLG();
            }
            else
            if (HmenAlignIn == "LN")
            {
                ConvertedAlign = "Lawful Neutral";
                HenchClassLN();
            }
            else
            if (HmenAlignIn == "LE")
            {
                ConvertedAlign = "Lawful Evil";
                HenchClassLE();
            }
            else
            if (HmenAlignIn == "NG")
            {
                ConvertedAlign = "Neutral Good";
                HenchClassNG();
            }
            else
            if (HmenAlignIn == "N")
            {
                ConvertedAlign = "Neutral";
                HenchClassN();
            }
            else
            if (HmenAlignIn == "NE")
            {
                ConvertedAlign = "Neutral Evil";
                HenchClassNE();
            }
            else
            if (HmenAlignIn == "CG")
            {
                ConvertedAlign = "Chaotic Good";
                HenchClassCG();
            }
            else
            if (HmenAlignIn == "CN")
            {
                ConvertedAlign = "Chaotic Neutral";
                HenchClassCN();
            }
            else
            if (HmenAlignIn == "CE")
            {
                ConvertedAlign = "Chaotic Evil";
                HenchClassCE();
            }

            HmenClassIn = HmenClassOut;
        }

        public static void HenchClassLG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                "Ranger","Ranger","Ranger","Ranger","Ranger",
                //"Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                //"Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                //"Assassin",
                "Monk",
                //"Bard"                                                         
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassLN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                //"Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                //"Assassin",
                "Monk",
                "Bard"                                                            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassLE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                "Assassin",
                "Monk",
/*                "Bard"      */                                                      };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassNG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                "Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                //"Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                //"Assassin",
                //"Monk",
                "Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                //"Cavalier","Cavalier","Cavalier","Cavalier",
                //"Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                "Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                //"Assassin",
                //"Monk",
                "Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassNE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                "Assassin",
                //"Monk",
                "Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassCG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                "Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                //"Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                //"Assassin",
                //"Monk",
                //"Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassCN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                "Assassin",
                //"Monk",
                "Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void HenchClassCE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter","Fighter",
                //"Ranger","Ranger","Ranger","Ranger","Ranger",
                "Barbarian","Barbarian",
                "Cavalier","Cavalier","Cavalier","Cavalier",
                "Paladin",
                "Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User","Magic-User",
                "Illusionist","Illusionist","Illusionist",
                "Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric","Cleric",
                //"Druid","Druid","Druid",
                "Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief","Thief",
                "Assassin",
                //"Monk",
                //"Bard"
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            HmenClassOut = subtype01;
        }
        public static void RacialsDwarf()
        {
            Racial01 = "+1 on saves vs. magic/rods/staves/wands for each 3.5 constitution points ; ";
            Racial02 = "+1 vs. poison per each 3.5 constitution points; speak dwarf, gnome, goblin, kobold,";
            Racial03 = "orc, common; infravision; detect traps involving stonework %75; +1 to hit giant class;";
            Racial04 = "-4 to armor class vs. giant class. ";
        }
        public static void RacialsElf()
        {
            Racial01 = "90% resistance to sleep and charm; +1 to hit with any non-crossbow and short";
            Racial02 = "or long sword; speak elf, gnome, halfling,    goblin, hobgoblin, orc, gnoll,";
            Racial03 = "common; ultravision (see in the dark outdoors at night); find secret doors 3/10";
            Racial04 = " or 6/10 if looking. ";
        }
        public static void RacialsDrow()
        {
            Racial01 = "Drow have 12 inch infravision. Detect new construction 75%, stonework traps 50%,";
            Racial02 = "sliding walls 2 / 3, depth underground 50 %; move silently 2 / 3; surprised only";
            Racial03 = "1 / 8; use the following 1 / day: dancing lights, faerie fire, darkness 5' radius;";
            Racial04 = "at 4th level, can cast detect magic, know alignment, levitate 1/day ; if female and";
            Racial05 = "4th level, can also cast clairvoyance, detect lie (or reverse), suggestion, dispel";
            Racial06 = "magic 1/day; full daylight or continual light reduces dexterity by 2, give -2 to hit";
            Racial07 = "and enemies recieve +2 on saves from attacks ; if in dark area, but attacking enemy";
            Racial08 = "in lit area , dex -1 and -1 to hit and +1 on enemies saves.";
        }
        public static void RacialsGnome()
        {
            Racial01 = "+1 on saves vs. magic/rods/staves/wands for each 3.5 consitution points ;";
            Racial02 = "speak dwarf,gnome, halfling, goblin, kobold, burrowing mammal; infravision; +1 to hit";
            Racial03 = "kobolds, goblins; -4 on armor class vs. giant class.  ";
        }
        public static void RacialsHalfElf()
        {
            Racial01 = "30% resistance to sleep/charm; speak elf, gnome, halfling, goblin, hobgoblin, orc,";
            Racial02 = "gnoll; infravision; find secret    doors 3/10 or 6/10 if looking.";
        }
        public static void RacialsHalfling()
        {
            Racial01 = "+1 on saves vs. magic/rods/staves/wands for each 3.5 constitution points ; +1 vs. poison";
            Racial02 = "per each 3.5 constitution points; speak dwarf,elf, gnome, goblin, halfling, orc; infravision.";
        }
        public static void RacialsHalforc()
        {
            Racial01 = "speak common, orc; infravision 60'.  ";
        }
        public static void MaritalStatus()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Single, no children",
                "Single, no children",
                "Single, no children",
                "Single, 1 child",
                "Single, 1 child",
                "Single, 2 children",
                "Married or comitted relationship, no children",
                "Married or comitted relationship, no children",
                "Married or comitted relationship, 1 child",
                "Married or comitted relationship, 2 children",
                "Married or comitted relationship, 2 children",
                "Married or comitted relationship, 3 children",
                "Married or comitted relationship, 4 children",
                "Unmarried, significant other, no children",
                "Unmarried, significant other, 1 child",
                "Unmarried, significant other, 1 child",
                "Unmarried, significant other, 2 child",
                "Unmarried, significant other, 3 child",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MaritalStatusOut = subtype01;
        }

            public static void CityOfOrigin()
            {
                Random rnd = new Random();
                string[] SubType01 = {
          
                "Aertael - Acua",
                "Aertael - Aertael",
                "Aertael - Aertael",
                "Aertael - Aertael",
                "Aertael - Aertael",
                "Aertael - Aertael",
                "Aertael - Aertael",
                "Aertael - Amrath",
                "Aertael - Andeil",
                "Aertael - Androst",
                "Aertael - Antonescu",
                "Aertael - Artel",
                "Aertael - Aswan",
                "Aertael - Atre",
                "Aertael - Barony of Ice",
                "Aertael - Belegram",
                "Aertael - Belegram",
                "Aertael - Belegram",
                "Aertael - Belegram",
                "Aertael - Belegram",
                "Aertael - Belegram",
                "Aertael - Brindel",
                "Aertael - Caepal",
                "Aertael - Caepal",
                "Aertael - Caepal",
                "Aertael - Caepal",
                "Aertael - Caepal",
                "Aertael - Caepal",
                "Aertael - Cinon",
                "Aertael - Denay",
                "Aertael - Ditais",
                "Aertael - Finarfin castle",
                "Aertael - Forsti",
                "Aertael - Ghiet",
                "Aertael - Grendon",
                "Aertael - Jiaghu",
                "Aertael - Jiara",
                "Aertael - Joatte",
                "Aertael - Kir-Har",
                "Aertael - Luingroth",
                "Aertael - Northton",
                "Aertael - Odra",
                "Aertael - Oukeaza",
                "Aertael - Port",
                "Aertael - Port",
                "Aertael - Port",
                "Aertael - Port",
                "Aertael - Port",
                "Aertael - Port",
                "Aertael - Piraddae",
                "Aertael - Ralhast",
                "Aertael - Ricad",
                "Aertael - Rosewall",
                "Aertael - Seok",
                "Aertael - Shrine of Light",
                "Aertael - Trask Keep",
                "Aertael - Veoria",
                "Aertael - Vilark",
                "Aertael - Vindale",
                "Koth - Ciann",
                "Koth - Gymbula",
                "Koth - Koth city",
                "Koth - Koth city",
                "Kax - Atre",
                "Kax - Doagi",
                "Kax - Kax city",
                "Kax - Mahala",
                "Kax - Tarien",
                "Tharia - Innocentver",
                "Tharia - Ziasna",
                "Tharia - Tharp",
                "Tharia - Tharp",
                "Tesh - Teshumbai",
                "Keth - Keth city",
                "Lyda - Lyda city",
                "Neusmik - Neusmik city",
                "Biru - Elou",
                "Larn - Xarlath",
                "Folaria - Hador",
            };
                int randomsubtype01 = rnd.Next(1, SubType01.Length);
                string subtype01 = SubType01[rnd.Next(SubType01.Length)];
                CityOfOriginOut = subtype01;
            }

        public static void SocialClass()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Lower Lower class","Lower Lower class","Lower Lower class","Lower Lower class",
            "Middle Lower Class","Middle Lower Class","Middle Lower Class",
            "Middle Lower Class","Middle Lower Class","Middle Lower Class",
            "Upper Lower Class","Upper Lower Class","Upper Lower Class",
            "Upper Lower Class","Upper Lower Class","Upper Lower Class",
            "Upper Lower Class","Upper Lower Class","Upper Lower Class",
            "Upper Lower Class",
            "Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class",
            "Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class",
            "Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class","Lower Middle Class",
            "Middle Middle Class","Middle Middle Class","Middle Middle Class","Middle Middle Class",
            "Middle Middle Class","Middle Middle Class","Middle Middle Class","Middle Middle Class",
            "Middle Middle Class","Middle Middle Class","Middle Middle Class","Middle Middle Class",
            "Middle Middle Class","Middle Middle Class","Middle Middle Class","Middle Middle Class",
            "Middle Middle Class","Middle Middle Class","Middle Middle Class","Middle Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Upper Middle Class","Upper Middle Class","Upper Middle Class","Upper Middle Class",
            "Lower Upper Class","Lower Upper Class","Lower Upper Class",
            "Lower Upper Class","Lower Upper Class","Lower Upper Class",
            "Lower Upper Class","Lower Upper Class","Lower Upper Class",
            "Middle Upper Class",
            "Middle Upper Class",
            "Middle Upper Class",
            "Upper Upper Class",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            SocialClassOut = subtype01;

        }


        public static void Father()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Father living",
            "Father living",
            "Father living",
            "Father living",
            "Father deceased",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            FatherOut = subtype01;
        }

        public static void Mother()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Mother living",
            "Mother living",
            "Mother living",
            "Mother living",
            "Mother deceased",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MotherOut = subtype01;
        }

        public static void Family()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Only child",
            "First child of two",
            "First child of three",
            "First child of four",
            "First child of five",
            "First child of six",
            "Second child of two",
            "Second child of three",
            "Second child of four",
            "Second child of five",
            "Second child of six",
            "Third child of three",
            "Third child of four",
            "Third child of five",
            "Third child of six",
            "Fourth child of four",
            "Fourth child of five",
            "Fourth child of six",
            "Fifth child of five",
            "Fifth child of six",
            "Sixth child of six",


            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            FamilyOut = subtype01;
        }

        public static void FamilyStatus()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Has not spoken to any family in years, was disowned",
            "Has not spoken to any family in years, did not approve of profession",
            "Has not spoken to any family in years, did not approve of profession",
            "Knows about family, but seldom in touch, as they disaprove of profession",
            "Knows about family, but seldom in touch, as they disaprove of profession",
            "Knows about family, but seldom in touch, as they disaprove of profession",
            "Knows about family, sends a letter a few times a year",
            "Knows about family, sends a letter a few times a year",
            "Knows about family, sends a letter a few times a year",
            "Knows about family, sends a letter a few times a year",
            "Knows about family, visits a few times a year",
            "Knows about family, visits a few times a year",
            "Knows about family, visits a few times a year",
            "Knows about family, visits a few times a year",
            "Close to family, visits a few times a year and writes often",
            "Close to family, visits a few times a year and writes often",
            "Close to family, visits a few times a year and writes often",
            "Close to family, writes, sends gifts, and visits often",
            "Close to family, writes, sends gifts, and visits often",
            "Close to family, writes, sends gifts, and visits often",
            "Very close to family, in contact regularly, neice or nephew named after them",
            "Very close to family, in contact regularly, neice or nephew named after them",
            "Extremely close to family, has brought them to where they live now and supports them",
            "Extremely close to family, has brought them to where they live now and supports them",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            FamilyStatusOut = subtype01;
        }

        public static void Allies()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "None",
            "None",
            "None",
            "A couple of acquaintences",
            "A couple of acquaintences",
            "A couple of acquaintences",
            "A few neighbors",
            "A few neighbors",
            "A few neighbors",
            "A few neighbors",
            "A few good friends",
            "A few good friends",
            "A few good friends",
            "A few good friends",
            "A few good friends, a poor merchant",
            "A few good friends, a poor merchant",
            "A few good friends, a poor merchant",
            "A few good friends, a priest at a small temple",
            "A few good friends, a priest at a small temple",
            "A few good friends, a priest at a small temple",
            "A few good friends, a low ranking criminal",
            "A few good friends, a low ranking criminal",
            "Several good friends, a modestly well off merchant",
            "Several good friends, a modestly well off merchant",
            "Several good friends, a constable",
            "Several good friends, a constable",
            "Several good friends, a well off merchant",
            "Several good friends, a well off merchant",
            "Several good friends, a well off merchant",
            "Several good friends, a mid rank politician",
            "Several good friends, a mid rank politician",
            "Several good friends, a mid rank politician",
            "Several good friends, a police officer or detective",
            "Several good friends, a police officer or detective",
            "Several good friends, a priest at a medium temple",
            "Several good friends, a priest at a medium temple",
            "Several good friends, a priest at a medium temple",
            "Several good friends, a priest at a medium temple",
            "Several good friends, a low ranking criminal",
            "Several good friends, a low ranking criminal",
            "Several good friends, a medium ranking criminal",
            "Several good friends, a medium ranking criminal",
            "Many good friends, a low level adventurer",
            "Many good friends, a low level adventurer",
            "Many good friends, a low level adventurer",
            "Many good friends, a low level adventurer",
            "Many good friends, several merchants",
            "Many good friends, several merchants",
            "Many good friends, several merchants",
            "Many good friends, several merchants",
            "Many good friends, a high ranking politician",
            "Many good friends, a high ranking politician",
            "Many good friends, a priest at a large temple",
            "Many good friends, a priest at a large temple",
            "Many good friends, a priest at a large temple",
            "Many good friends, a priest at a large temple",
            "Many good friends, a minor noble",
            "Many good friends, a minor noble",
            "Many good friends, a high ranking noble",
            "Many good friends, a medium level adventurer",
            "Many good friends, a medium level adventurer",
            "Many good friends, a medium level adventurer",
            "Many good friends, a medium level adventurer",
            "Many good friends, several medium level adventurers",
            "Many good friends, several medium level adventurers",
            "Many good friends, several medium level adventurers",
            "Many good friends, several medium level adventurers",
            "Many good friends, a high level adventurer",
            "Many good friends, a high level adventurer",
            "Many good friends, several high level adventurers",
            "Many good friends, a sage",
            "Many good friends, a low ranking criminal",
            "Many good friends, a low ranking criminal",
            "Many good friends, a low ranking criminal",
            "Many good friends, a medium ranking criminal",
            "Many good friends, a medium ranking criminal",
            "Many good friends, a high ranking criminal",
            "Many good friends, well connected to the government and a temple",
            "Many good friends, well connected to the government and underworld",
            "Many good friends, well connected to the government and business figures",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            AlliesOut = subtype01;
        }


        public static void Companions()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "None",
            "None",
            "Attack dog",
            "Attack wolf",
            "Highly trained warhorse",
            "Hunting bird",
            "Clever ferret",
            "Crow or raven",
            "Squire",
            "Lower level adventurer",
            "Lower level adventurer",
            "Lower level adventurer",
            "Lower level adventurer",
            "Lower level adventurer",
            "Trusted servant",
            "Trusted servant",
            "Trusted servant",
            "Man-at-arms",
            "Man-at-arms",
            "Man-at-arms",


            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            CompanionsOut = subtype01;
        }

        public static void Merit()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Social - boon",
            "Social - prestigious family",
            "Social - special item",
            "Social - character class friendship",
            "Social - pawn",
            "Psychological - code of honor",
            "Psychological - higher purpose",
            "Psychological - berserker",
            "Mental - Common sense",
            "Mental - Concentration",
            "Mental - Lightning Calculator",
            "Mental - Eidetic memory",
            "Mental - Magical theorist",
            "Mental - Light sleeper",
            "Mental - Calm heart",
            "Mental - Iron will",
            "Mental - Self-confident",
            "Mental - Brilliant",
            "Awareness - Acute hearing",
            "Awareness - Acute vision",
            "Aptitudes - Ambidextrous",
            "Aptitudes - Natural rider",
            "Aptitudes - Mechanical apititude",
            "Aptitudes - Natural linguist",
            "Aptitudes - Daredevil",
            "Aptitudes - Fast learning",
            "Aptitudes - Jack of all trades",
            "Aptitudes - Weapon affinity",
            "Aptitudes - Natural born driver",
            "Supernatural - True love",
            "Supernatural - Medium",
            "Supernatural - Danger sense",
            "Supernatural - Magic resistance",
            "Supernatural - Spirit mentor",
            "Supernatural - Monster companion",
            "Supernatural - Luck",
            "Supernatural - Destiny",
            "Supernatural - Charmed existence",
            "Supernatural - Guardian Angel",
            "Supernatural - Special ability",
            "Society - Judicial ties",
            "Society - Mansion",
            "Society - Tavern",
            "Society - Temple ties",
            "Society - Merchant ties",
            "Society - Constable ties",
            "Society - Political ties",
            "Society - Underworld ties",
            "Society - Merchant prince",
            "Physical - Double-jointed",
            "Physical - Huge size (add to listed size)",
            "Physical - Cat Napper",
            "Physical - Tough",
            "Physical - Physically fit",
            "Physical - Buff",
            "Physical - Huge and Buff (add to listed size)",
            "Physical - Natural longevity",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MeritOut = subtype01;
        }


        public static void Flaw()
        {
            Random rnd = new Random();
            string[] SubType01 = {


            "Social - Enemy",
            "Social - Infamous family",
            "Social - Mistaken Identity",
            "Social - Family resentment",
            "Social - Twisted upbringing",
            "Social - Character class enmity",
            "Social - Criminal family",
            "Social - Notoriety",
            "Psychological - Compulsion",
            "Psychological - Dark secret",
            "Psychological - Intolerance",
            "Psychological - Nightmares",
            "Psychological - Phobia - mild",
            "Psychological - Combat exclusion",
            "Psychological - Overconfident",
            "Psychological - Shy",
            "Psychological - Soft-hearted",
            "Psychological - Speech impediment",
            "Psychological - Low self-image",
            "Psychological - short fuse",
            "Psychological - Vengeance",
            "Psychological - Driving goal",
            "Psychological - hatred",
            "Psychological - Phobia - severe",
            "Psychological - Greedy",
            "Psychological - Honest to a fault",
            "Psychological - Vulgar",
            "Psychological - Power hungry",
            "Psychological - Horrible nightmares",
            "Psychological - Obsessed",
            "Mental - Deep sleeper",
            "Mental - Amnesia",
            "Mental - Confused",
            "Mental - Weak-willed",
            "Mental - Absent minded",
            "Awareness - Color blindness",
            "Awareness - Hard of hearing",
            "Awareness - Bad sight",
            "Aptitudes - Illiterate",
            "Supernatural - Cursed",
            "Supernatural - Magic susceptibility",
            "Supernatural - Haunted",
            "Supernatural - Dark fate",
            "Supernatural - Lycanthrope",
            "Special - Anachronism",
            "Special - Ward",
            "Special - Hunted",
            "Physical - Allergic",
            "Physical - Short",
            "Physical - Disfigured",
            "Physical - Selective digestion",
            "Physical - Deformity",
            "Physical - Lame",
            "Physical - Mute",
            "Physical - Bald",
            "Physical - Airsick",
            "Physical - Seasick",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            FlawOut = subtype01;
        }

        public static void Speaking1()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Speaks very quickly, ",
            "Speaks somewhat quickly, ",
            "Speaks just slightly quickly, ",
            "Speaks at a typical rate, ",
            "Speaks at a typical rate, ",
            "Speaks at a typical rate, ",
            "Speaks a little slowly, ",
            "Speaks quite slowly, ",
            "Speaks very slowly, "

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            Speaking1Out = subtype01;            
        }

        public static void Speaking2()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "American accent, ","American accent, ","American accent, ","American accent, ",
            "American accent, ","American accent, ","American accent, ","American accent, ",
            "American accent, ","American accent, ","American accent, ","American accent, ",
            "American accent, ","American accent, ","American accent, ","American accent, ",
            "Canadian accent, ",
            "Upper class English accent, ",
            "Cockney English accent, ",
            "Irish accent, ",
            "Spanish accent, ",
            "French accent, ",
            "Italian accent, ",
            "Russian accent, ",
            "Australian accent, ",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            Speaking2Out = subtype01;
        }
        public static void Speaking3()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Voice very high, ",
            "Voice somewhat high, ",
            "Voice a little high, ",
            "Voice a little high, ",
            "Voice average pitch, ",
            "Voice average pitch, ",
            "Voice average pitch, ",
            "Voice average pitch, ",
            "Voice slightly deep, ",
            "Voice slightly deep, ",
            "Very fairly deep, ",
            "Voice extremely deep, ",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            Speaking3Out = subtype01;
        }
        public static void Speaking4()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Blabbers, especially under stress.",
            "Goes off on tangents.",
            "Diverts the subject often.",
            "Circular, loses train of thought and returns.",
            "Reptitive, either stricktly or with variation.",
            "Logical.",
            "Pauses, sometimes for a very long time, or in mid-sentence.",
            "Silent after spoken to, while thinking carefully.",
            "Blanketing, spews out all they know, even if not needed.",
            "Superficial, mindless chatter.",
            "Dysfluence - um, er, uh common.",
            "Terse - grunts, monosyllables.",
            "No pauses in speech.",
            "Formal.",
            "No contractions.",
            "Patronizing.",
            "Negative in all ways.",
            "Positive in all ways.",
            "Excessively polite.",
            "Stutters.",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            Speaking4Out = subtype01;
        }

        public static void Clothing()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Badly worn, one outfit, dirty.",
            "Slightly worn, a couple of outfits.",
            "Slightly worn, a couple of outfits.",
            "Plain and simple, but well mended.",
            "Plain and simple, but well mended.",
            "Plain and simple, but well mended.",
            "Plain and simple, fairly new.",
            "Plain and simple, fairly new.",
            "Plain and simple, fairly new.",
            "Some variety, mostly subdued colors and patterns.",
            "Some variety, mostly subdued colors and patterns.",
            "Some variety, mostly subdued colors and patterns.",
            "Some variety, mostly subdued colors and patterns.",
            "Moderate variety, some color and patterns.",
            "Moderate variety, some color and patterns.",
            "Moderate variety, some color and patterns.",
            "Moderate variety, some color and patterns.",
            "Good variety, has some different clothing for various needs, moderate variety of colors and styles.",
            "Good variety, has some different clothing for various needs, moderate variety of colors and styles.",
            "Good variety, has some different clothing for various needs, moderate variety of colors and styles.",
            "Good variety, has some different clothing for various needs, moderate variety of colors and styles.",
            "Excellent variety, clothing for most needs from slumming to a good suit, desert wear, arctic wear.",
            "Excellent variety, clothing for most needs from slumming to a good suit, desert wear, arctic wear.",
            "Excellent variety, clothing for most needs from slumming to a good suit, desert wear, arctic wear.",
            "Complete range from peasant rags to court dress, in all the latest styles, from a formal outfit to costume ball, ready for anything.",
            "Complete range from peasant rags to court dress, in all the latest styles, from a formal outfit to costume ball, ready for anything.",
            "Clothing from middle class casual to elite formal wear, nothing less.",
            "Always overdressed, owns and wears only the best, discards if damaged or worn.",
            "Unpredictable, views clothing as a chance to stand out.",


            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ClothingOut = subtype01;
        }

        public static void Residence()
        {
            Random rnd = new Random();
            string[] SubType01 = {

            "Lives on the streets, sleeps in an alley",
            "Lives on the streets, sleeps in an abandoned building",
            "Lives in a flophouse with many others",
            "Lives in a cheap apartment with a large family",
            "Lives in a cheap apartment with a large family",
            "Lives in a cheap apartment alone",
            "Lives in a cheap apartment alone",
            "Lives in a modest rented room",
            "Lives in a modest rented room",
            "Lives in a modest rented room",
            "Lives in a nice rented room",
            "Lives in a nice rented room",
            "Lives in a nice rented room",
            "Lives in a very nice rented room",
            "Lives in a very nice rented room",
            "Lives in a very nice rented room",
            "Lives in an excellent rented suite",
            "Lives in an excellent rented suite",
            "Lives in a modest rented home",
            "Lives in a modest rented home",
            "Lives in a nice rented home",
            "Lives in a nice rented home",
            "Lives in an excellent rented home",
            "Owns a rundown shack",
            "Owns a cheap small house",
            "Owns a cheap small house",
            "Owns a modest little house",
            "Owns a modest little house",
            "Owns a moderate nice house",
            "Owns a moderate nice house",
            "Owns a moderate nice house",
            "Owns a very nice small house",
            "Owns a very nice medium house",
            "Owns a very nice large house",
            "Owns a small mansion",
            "Owns a large mansion",
            "Lives in a temple, as charity",
            "Lives in a temple, works as guard",
            "Lives in a temple, works as guard",
            "Lives in a temple, honored guest",
            "Lives in a temple, honored guest",
            "Lives over a small business, friend of the owner",
            "Lives over a small business, friend of the owner",
            "Lives over a small business, night guard",
            "Lives in an inn-tavern, evening bouncer",
            "Lives in an inn-tavern, night guard",
            "Lives in an inn-tavern, friend of the owner",
            "Lives in an inn-tavern, friend of the owner",
            "Lives in an inn-tavern, long term rental",
            "Lives in an inn-tavern, long term rental",
            "Lives in a nice hotel",
            "Lives in a nice hotel",
            "Lives in a high quality hotel",
            "Lives in the barn of a farm, works part time there",
            "Lives in the house on a farm, friend of the family",
            "Lives in the house on a farm, friend of the family",
            "Lives in a hut in the woods",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            ResidenceOut = subtype01;
        }


        public static void DeityLG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Heimdall",
            "Tyr",
            "Bahamut",
            "Anubis",
            "Diancecht",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }

        public static void DeityNG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Odin",
            "Itzamna",
            "Frey",
            "Freya",
            "Ra",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityCG()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Idun",
            "Sif",
            "Thor",
            "Bast",
            "Magni",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityLN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Frigga",
            "Nike",
            "Ptah",
            "Quetzelcoatl",
            "Clageddin",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Ki",
            "Artemis",
            "Oghma",
            "Brigit",
            "Silvanus",
            "Ishtar",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityCN()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Dionysus",
            "Tuoni",
            "Mannanan",
            "Erevan Elesere",
            "Aegir",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityLE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Surtur",
            "Dispater",
            "Tiamat",
            "Set",
            "Mictlantechulti",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityNE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Hel",
            "Hades",
            "Abaathor",
            "Shargrass",
            "Surma",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }
        public static void DeityCE()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Loki",
            "Thrym",
            "Jubilex",
            "Yeenoghu",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            DeityOut = subtype01;
        }

        public static void AnyWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Javelin",
            "Axe, Battle",
            "Axe, Battle",
            "Axe, Hand",
            "Bow, short",
            "Bow, short",
            "Bow, short",
            "Bow, long",
            "Bow, long",
            "Bow, long",
            "Bow, long",
            "Club",
            "Club",
            "Dagger",
            "Flail, Footmans",
            "Flail, Footmans",
            "Flail, Footmans",
            "Flail, Horsemans",
            "Flail, Horsemans",
            "Hammer",
            "Hammer",
            "Lance",
            "Lance",
            "Mace, Footmans",
            "Mace, Footmans",
            "Mace, Horsemans",
            "Mace, Horsemans",
            "Morning Star",
            "Pick, Footmans",
            "Pick, Horsemans",
            "Crossbow, heavy",
            "Crossbow, light",
            "Crossbow, light",
            "Scimitar",
            "Scimitar",
            "Scimitar",
            "Sling",
            "Spear",
            "Spear",
            "Spear",
            "Staff",
            "Staff",
            "Staff",
            "Sword, bastard",
            "Sword, bastard",
            "Sword, Broad",
            "Sword, Broad",
            "Sword, Broad",
            "Sword, falchion",
            "Sword, falchion",
            "Sword, Khopesh",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",
            "Sword, two-handed",
            "Sword, two-handed",
            "Trident",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void CavalierWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Javelin",
            "Dagger",
            "Dagger",
            "Flail, Horsemans",
            "Mace, Horsemans",
            "Military Pick",
            "Scimitar",
            "Scimitar",
            "Sword, bastard",
            "Sword, bastard",
            "Sword, bastard",
            "Sword, Broad",
            "Sword, Long",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void CavalierSword()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Scimitar",
            "Scimitar",
            "Scimitar",
            "Sword, Broad",
            "Sword, Broad",
            "Sword, Broad",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void CavalierHorse()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Mace, Horsemans",
            "Flail, Horsemans",
            "Military Pick",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void ClericWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Club",
            "Flail, Footmans",
            "Flail, Footmans",
            "Flail, Footmans",
            "Flail, Horsemans",
            "Flail, Horsemans",
            "Mace, Footmans",
            "Mace, Footmans",
            "Mace, Footmans",
            "Mace, Horsemans",
            "Staff",
            "Staff",
            "Staff",
            "Sap",
            "Staff-Sling",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void DruidWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Aklys",
            "Club",
            "Club",
            "Club",
            "Dagger",
            "Dagger",
            "Dagger",
            "Dart",
            "Garrot",
            "Hammer",
            "Hammer",
            "Hammer",
            "Lasso",
            "Sap",
            "Sling",
            "Sling",
            "Sling",
            "Scimitar",
            "Scimitar",
            "Scimitar",
            "Spear",
            "Spear",
            "Spear",
            "Spear",
            "Staff",
            "Staff",
            "Staff",
            "Staff-sling",
            "Khopesh",
            "Khopesh",
            "Whip",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void MagicUserWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Dagger",
            "Dagger",
            "Dagger",
            "Dart",
            "Dart",
            "Staff",
            "Staff",
            "Staff",
            "Sling",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void ThiefWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Bow, Short",
            "Bow, Short",
            "Club",
            "Club",
            "Crossbow, Hand",
            "Dagger",
            "Dagger",
            "Dart",
            "Dart",
            "Garrot",
            "Sap",
            "Sling",
            "Sling",
            "Sword, Broad",
            "Sword, Broad",
            "Falchion",
            "Sword, Long",
            "Sword, Long",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",

            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void MonkWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Aklys",
            "Atlatl",
            "Axe, hand",
            "Axe, hand",
            "Bo Stick",
            "Club",
            "Club",
            "Crossbow, Light",
            "Crossbow, Light",
            "Crossbow, Heavy",
            "Dagger",
            "Dagger",
            "Garrot",
            "Javelin",
            "Javelin",
            "Jo Stick",
            "Lasso",
            "Sap",
            "Spear",
            "Spear",
            "Falchion",
            "Falchion",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void BardWeapon()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Club"                    ,
            "Club"                    ,
            "Dagger",
            "Dagger",
            "Dagger",
            "Dart",
            "Garrot",
            "Javelin",
            "Javelin",
            "Lasso",
            "Sap",
            "Scimitar",
            "Scimitar",
            "Sling",
            "Sling",
            "Spear",
            "Spear",
            "Spear",
            "Staff",
            "Staff",
            "Sword, Bastard",
            "Sword, Bastard",
            "Sword, Broad",
            "Sword, Broad",
            "Sword, Broad",
            "Falchion",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Long",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",
            "Sword, Short",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            WeapProfOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicClassStr()
        {
            if (HmenClassOut == "Fighter" | HmenClassOut == "Ranger" | HmenClassOut == "Barbarian" | 
                    HmenClassOut == "Cavalier" | HmenClassOut == "Paladin" | HmenClassOut == "Bard")
                MagicStrong1();
            else
            if (HmenClassOut == "Magic-User" | HmenClassOut == "Illusionist")
                MagicStrong2();
            else
            if (HmenClassOut == "Cleric" | HmenClassOut == "Druid")
                MagicStrong3();
            else
            if (HmenClassOut == "Thief" | HmenClassOut == "Assassin")
                MagicStrong4();
            else
            if (HmenClassOut == "Monk")
                MagicStrong5();
        }

        public static void MagicClassWeak()
        {
            if (HmenClassOut == "Fighter" | HmenClassOut == "Ranger" | HmenClassOut == "Barbarian" |
                    HmenClassOut == "Cavalier" | HmenClassOut == "Paladin" | HmenClassOut == "Bard")
                MagicWeak1();
            else
            if (HmenClassOut == "Magic-User" | HmenClassOut == "Illusionist")
                MagicWeak2();
            else
            if (HmenClassOut == "Cleric" | HmenClassOut == "Druid")
                MagicWeak3();
            else
            if (HmenClassOut == "Thief" | HmenClassOut == "Assassin")
                MagicWeak4();
            else
            if (HmenClassOut == "Monk")
                MagicWeak5();
        }

        public static void MagicStrong1()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Sword","Sword","Sword","Sword","Sword",
                "Armor","Armor","Armor","Armor","Armor",
                "Miscellaneous Magic","Miscellaneous Magic",
                "Ring","Ring",
                "Rod",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicStrong2()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Miscellaneous Magic","Miscellaneous Magic",
                "Ring","Ring",
                "Rod",
                "Staff","Staff",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicStrong3()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Armor","Armor","Armor","Armor",
                "Miscellaneous Magic","Miscellaneous Magic",
                "Ring","Ring",
                "Rod","Staff",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicStrong4()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Sword","Sword","Sword","Sword","Sword",
                "Armor","Armor","Armor","Armor","Armor",
                "Miscellaneous Magic","Miscellaneous Magic",
                "Ring","Ring",
                "Rod",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicStrong5()
        {
            Random rnd = new Random();
            string[] SubType01 = {
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Miscellaneous Weapon","Miscellaneous Weapon","Miscellaneous Weapon",
                "Falchion","Falchion","Falchion",
                "Miscellaneous Magic","Miscellaneous Magic",
                "Ring","Ring",
                "Rod","Wand","Staff",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void MagicWeak1()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Potion","Potion","Potion","Potion","Potion",
            "Scroll","Scroll",
            "Wand",
            "Arrows",
            "Darts",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicWeak2()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Potion","Potion","Potion","Potion","Potion",
            "Scroll","Scroll",
            "Scroll","Scroll",
            "Wand",
            "Darts",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicWeak3()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Potion","Potion","Potion","Potion","Potion",
            "Scroll","Scroll",
            "Scroll","Scroll",
            "Wand",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }
        public static void MagicWeak4()
        {
            Random rnd = new Random();
            string[] SubType01 = {
            "Potion","Potion","Potion","Potion","Potion",
            "Scroll","Scroll",
            "Wand",
            "Arrows",
            "Darts",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

        public static void MagicWeak5()
        {
            Random rnd = new Random();
            string[] SubType01 = {anen
            "Potion","Potion","Potion","Potion","Potion",
            "Scroll","Scroll",
            "Wand",
            "Bolts",
            };
            int randomsubtype01 = rnd.Next(1, SubType01.Length);
            string subtype01 = SubType01[rnd.Next(SubType01.Length)];
            MagicItemOut = subtype01;
            System.Threading.Thread.Sleep(300);
        }

    }       
}
